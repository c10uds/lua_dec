local L0_0
L0_0 = module
L0_0("xiaoqiang.XQPushHelper", package.seeall)
L0_0 = require
L0_0 = L0_0("json")
function _exception(A0_1)
  local L1_2, L2_3, L3_4, L4_5, L5_6
  if A0_1 then
    for L4_5, L5_6 in L1_2(L2_3) do
      if A0_1:match(L5_6) then
        return true
      end
    end
  end
  return L1_2
end
function _doPush(A0_7, A1_8, A2_9, A3_10, A4_11)
  local L5_12, L6_13
  if not A0_7 or not A1_8 or not A2_9 then
    return
  end
  L5_12 = _UPVALUE0_
  L5_12 = L5_12._cmdformat
  L6_13 = A0_7
  L5_12 = L5_12(L6_13)
  A0_7 = L5_12
  L5_12 = "1"
  if A3_10 then
    L6_13 = tostring
    L6_13 = L6_13(A3_10)
    L5_12 = L6_13
  end
  L6_13 = string
  L6_13 = L6_13.format
  L6_13 = L6_13("matool --method notify --params \"%s\"", A0_7)
  if A4_11 then
    _UPVALUE0_.forkExec(L6_13)
  else
    os.execute(L6_13)
  end
  _UPVALUE1_.log(6, "matool notify:", A0_7)
end
function _doEventServicePush(A0_14, A1_15, A2_16, A3_17)
  local L4_18, L5_19
  L4_18 = "eventservice"
  L5_19 = {}
  L5_19.type = A0_14
  L5_19.mac = A1_15
  L5_19.name = A2_16
  L5_19.count = A3_17
  if require("ubus").connect() then
    require("ubus").connect():call(L4_18, "fcw_notify", L5_19)
    require("ubus").connect():close()
    _UPVALUE0_.log(6, "eventservice notify:", L5_19)
  end
end
function _matool(A0_20, A1_21)
  local L2_22
  L2_22 = _UPVALUE0_
  L2_22 = L2_22.isStrNil
  L2_22 = L2_22(A0_20)
  if L2_22 then
    return
  end
  L2_22 = string
  L2_22 = L2_22.format
  L2_22 = L2_22("matool --method reportEvents --params '[%s]'", A0_20)
  _UPVALUE1_.log(4, L2_22)
  if A1_21 then
    _UPVALUE0_.forkExec(L2_22)
  else
    os.execute(L2_22)
  end
  _UPVALUE1_.log(4, "WiFi/LOGIN Authen failed: " .. A0_20)
end
function _hookSysUpgraded()
  local L0_23, L1_24, L2_25
  L0_23 = require
  L1_24 = "xiaoqiang.util.XQSysUtil"
  L0_23 = L0_23(L1_24)
  L1_24 = L0_23.getRomVersion
  L1_24 = L1_24()
  L2_25 = {}
  L2_25.type = 1
  L2_25.ver = L1_24
  _doPush(_UPVALUE0_.encode(L2_25), "\231\179\187\231\187\159\229\141\135\231\186\167", "\231\179\187\231\187\159\229\141\135\231\186\167")
end
function _hookWifiConnect(A0_26, A1_27)
  local L2_28, L3_29, L4_30, L5_31, L6_32, L7_33, L8_34, L9_35, L10_36, L11_37, L12_38, L13_39, L14_40, L15_41, L16_42
  L2_28 = _UPVALUE0_
  L2_28 = L2_28.isStrNil
  L3_29 = A0_26
  L2_28 = L2_28(L3_29)
  if L2_28 then
    return
  end
  L2_28 = _UPVALUE0_
  L2_28 = L2_28.macFormat
  L3_29 = A0_26
  L2_28 = L2_28(L3_29)
  A0_26 = L2_28
  L3_29 = A0_26
  L2_28 = A0_26.gsub
  L4_30 = ":"
  L5_31 = ""
  L2_28 = L2_28(L3_29, L4_30, L5_31)
  L3_29 = require
  L4_30 = "luci.model.uci"
  L3_29 = L3_29(L4_30)
  L3_29 = L3_29.cursor
  L3_29 = L3_29()
  L5_31 = L3_29
  L4_30 = L3_29.get
  L6_32 = "misc"
  L7_33 = "wireless"
  L8_34 = "guest_2G"
  L4_30 = L4_30(L5_31, L6_32, L7_33, L8_34)
  L4_30 = L4_30 or ""
  if A1_27 == L4_30 then
    L6_32 = L3_29
    L5_31 = L3_29.get
    L7_33 = "wifishare"
    L8_34 = "global"
    L9_35 = "disabled"
    L5_31 = L5_31(L6_32, L7_33, L8_34, L9_35)
    if L5_31 == "0" then
      return
    end
  end
  L5_31 = tonumber
  L6_32 = os
  L6_32 = L6_32.time
  L16_42 = L6_32()
  L5_31 = L5_31(L6_32, L7_33, L8_34, L9_35, L10_36, L11_37, L12_38, L13_39, L14_40, L15_41, L16_42, L6_32())
  L7_33 = L3_29
  L6_32 = L3_29.get
  L8_34 = "devicelist"
  L9_35 = "history"
  L10_36 = L2_28
  L6_32 = L6_32(L7_33, L8_34, L9_35, L10_36)
  L7_33 = false
  L8_34 = false
  L9_35 = 0
  if not L6_32 then
    L7_33 = true
    L10_36 = 0
    L14_40 = "history"
    tb_val = L11_37
    for L14_40, L15_41 in L11_37(L12_38) do
      L10_36 = L10_36 + 1
    end
    if L10_36 >= 512 then
      L11_37(L12_38, L13_39)
      return
    end
    L14_40 = "history"
    L15_41 = L2_28
    L16_42 = L5_31
    L11_37(L12_38, L13_39, L14_40, L15_41, L16_42)
    if not L11_37 then
      L14_40 = "Devicelist write error then exit."
      L12_38(L13_39, L14_40)
      return
    end
  end
  L10_36 = L3_29.get
  L14_40 = L2_28
  L10_36 = L10_36(L11_37, L12_38, L13_39, L14_40)
  if L10_36 then
    L8_34 = true
  end
  if L7_33 or L8_34 then
    L14_40 = L12_38.dhcpname
    if not L13_39 then
      L14_40 = L12_38.dhcpname
      L15_41 = L13_39
      L14_40 = L13_39.match
      L16_42 = "^miwifi"
      L14_40 = L14_40(L15_41, L16_42)
      if L14_40 then
        L14_40 = {}
        L14_40.type = 23
        L14_40.name = "\229\176\143\231\177\179\232\183\175\231\148\177\229\153\168"
        L15_41 = _doPush
        L16_42 = _UPVALUE2_
        L16_42 = L16_42.encode
        L16_42 = L16_42(L14_40)
        L15_41(L16_42, "\228\184\173\231\187\167\230\136\144\229\138\159", "\228\184\173\231\187\167\230\136\144\229\138\159")
        return
      else
        L15_41 = L13_39
        L14_40 = L13_39.match
        L16_42 = "^xiaomirepeater"
        L14_40 = L14_40(L15_41, L16_42)
        if L14_40 then
          L14_40 = {}
          L14_40.type = 56
          L14_40.name = "\229\176\143\231\177\179\228\184\173\231\187\167\229\153\168"
          L14_40.mac = A0_26
          L15_41 = _doPush
          L16_42 = _UPVALUE2_
          L16_42 = L16_42.encode
          L16_42 = L16_42(L14_40)
          L15_41(L16_42, "\228\184\173\231\187\167\230\136\144\229\138\159", "\228\184\173\231\187\167\230\136\144\229\138\159")
          return
        end
      end
    end
    L14_40 = string
    L14_40 = L14_40.lower
    L15_41 = L12_38.dhcpname
    L14_40 = L14_40(L15_41)
    if L7_33 then
      L15_41 = _exception
      L16_42 = L14_40
      L15_41 = L15_41(L16_42)
      if L15_41 then
        return
      end
    end
    if L13_39 then
      L15_41 = string
      L15_41 = L15_41.lower
      L16_42 = L13_39
      L15_41 = L15_41(L16_42)
      L16_42 = L15_41
      L15_41 = L15_41.match
      L15_41 = L15_41(L16_42, "android-%S+")
      if L15_41 then
        L15_41 = #L13_39
        if L15_41 > 12 then
          L16_42 = L13_39
          L15_41 = L13_39.sub
          L15_41 = L15_41(L16_42, 1, 12)
        end
      end
    end
    L15_41 = L12_38.type
    L15_41 = L15_41.c
    if L15_41 == 2 then
      L15_41 = L12_38.type
      L15_41 = L15_41.p
    else
      if L15_41 ~= 6 then
        L15_41 = L12_38.type
        L15_41 = L15_41.c
        if L15_41 == 3 then
          L15_41 = L12_38.type
          L15_41 = L15_41.p
        elseif L15_41 ~= 2 then
          L15_41 = L12_38.type
          L15_41 = L15_41.c
          if L15_41 == 3 then
            L15_41 = L12_38.type
            L15_41 = L15_41.p
          end
        end
    end
    elseif L15_41 == 7 then
      return
    end
    if L7_33 then
      L15_41 = _UPVALUE3_
      L15_41 = L15_41.pushSettings
      L15_41 = L15_41()
      L16_42 = L15_41.auth
      if L16_42 then
        L16_42 = L15_41.level
        if L16_42 then
          L16_42 = L15_41.level
          if L16_42 >= 2 then
            L16_42 = _UPVALUE0_
            L16_42 = L16_42.isStrNil
            L16_42 = L16_42(L12_38.dhcpname)
            if L16_42 then
              L16_42 = os
              L16_42 = L16_42.execute
              L16_42("sleep 4")
              L16_42 = L11_37.getDeviceInfo
              L16_42 = L16_42(A0_26)
              L16_42 = string
              L16_42 = L16_42.lower
              L16_42 = L16_42(L12_38.dhcpname)
              L14_40 = L16_42
              if L7_33 then
                L16_42 = _exception
                L16_42 = L16_42(L14_40)
                if L16_42 then
                  return
                end
              end
              if L13_39 then
                L16_42 = string
                L16_42 = L16_42.lower
                L16_42 = L16_42(L13_39)
                L16_42 = L16_42.match
                L16_42 = L16_42(L16_42, "android-%S+")
                if L16_42 then
                  L16_42 = #L13_39
                  if L16_42 > 12 then
                    L16_42 = L13_39.sub
                    L16_42 = L16_42(L13_39, 1, 12)
                  end
                end
              end
            end
            L16_42 = {}
            L16_42.type = 3
            L16_42.mac = A0_26
            L16_42.name = L13_39
            if A1_27 == L4_30 then
              L16_42.type = 27
            end
            _doPush(_UPVALUE2_.encode(L16_42), "\233\153\140\231\148\159\232\174\190\229\164\135\228\184\138\231\186\191", "\233\153\140\231\148\159\232\174\190\229\164\135\228\184\138\231\186\191")
            if L12_38.flag == 0 then
              XQDBUtil = require("xiaoqiang.util.XQDBUtil")
              XQDBUtil.saveDeviceInfo(A0_26, L12_38.dhcpname, "", "", "")
            end
            _UPVALUE1_.log(6, "New Device Connect.", L12_38)
          end
        end
      end
    elseif L8_34 then
      L15_41 = _UPVALUE1_
      L15_41 = L15_41.log
      L16_42 = 6
      L15_41(L16_42, "Special Device Connect.", L12_38)
      L15_41 = require
      L16_42 = "xiaoqiang.util.XQDBUtil"
      L15_41 = L15_41(L16_42)
      L16_42 = L15_41.vip_device_pre_push
      L16_42(A0_26, L13_39, "online")
    end
  end
end
function _guestWifiConnectPush(A0_43, A1_44, A2_45)
  local L3_46, L4_47, L5_48, L6_49, L7_50
  L3_46 = _UPVALUE0_
  L3_46 = L3_46.isStrNil
  L4_47 = A0_43
  L3_46 = L3_46(L4_47)
  if L3_46 then
    return
  else
    L3_46 = _UPVALUE0_
    L3_46 = L3_46.macFormat
    L4_47 = A0_43
    L3_46 = L3_46(L4_47)
    A0_43 = L3_46
  end
  L3_46 = require
  L4_47 = "xiaoqiang.util.XQDeviceUtil"
  L3_46 = L3_46(L4_47)
  L4_47 = L3_46.getDeviceInfo
  L5_48 = A0_43
  L4_47 = L4_47(L5_48)
  L5_48 = A2_45
  L6_49 = string
  L6_49 = L6_49.lower
  L7_50 = L4_47.dhcpname
  L6_49 = L6_49(L7_50)
  L7_50 = _exception
  L7_50 = L7_50(L6_49)
  if L7_50 then
    return
  end
  L7_50 = L4_47.type
  L7_50 = L7_50.c
  if L7_50 == 2 then
    L7_50 = L4_47.type
    L7_50 = L7_50.p
  else
    if L7_50 ~= 6 then
      L7_50 = L4_47.type
      L7_50 = L7_50.c
      if L7_50 == 3 then
        L7_50 = L4_47.type
        L7_50 = L7_50.p
      elseif L7_50 ~= 2 then
        L7_50 = L4_47.type
        L7_50 = L7_50.c
        if L7_50 == 3 then
          L7_50 = L4_47.type
          L7_50 = L7_50.p
        end
      end
  end
  elseif L7_50 == 7 then
    return
  end
  L7_50 = {}
  L7_50.type = 60
  L7_50.mac = A0_43
  L7_50.name = L5_48
  L7_50.sns = A1_44
  _doPush(_UPVALUE1_.encode(L7_50), "Guest wifi", "Guest wifi")
end
function _hookWifiDisconnect(A0_51)
  local L1_52, L2_53, L3_54, L4_55, L5_56
  L1_52 = _UPVALUE0_
  L1_52 = L1_52.isStrNil
  L2_53 = A0_51
  L1_52 = L1_52(L2_53)
  if L1_52 then
    return
  end
  L1_52 = _UPVALUE0_
  L1_52 = L1_52.macFormat
  L2_53 = A0_51
  L1_52 = L1_52(L2_53)
  A0_51 = L1_52
  L1_52 = require
  L2_53 = "xiaoqiang.util.XQDeviceUtil"
  L1_52 = L1_52(L2_53)
  L2_53 = L1_52.getDeviceInfo
  L3_54 = A0_51
  L2_53 = L2_53(L3_54)
  L3_54 = L2_53.name
  L4_55 = string
  L4_55 = L4_55.lower
  L5_56 = L2_53.dhcpname
  L4_55 = L4_55(L5_56)
  if L3_54 then
    L5_56 = string
    L5_56 = L5_56.lower
    L5_56 = L5_56(L3_54)
    L5_56 = L5_56.match
    L5_56 = L5_56(L5_56, "android-%S+")
    if L5_56 then
      L5_56 = #L3_54
      if L5_56 > 12 then
        L5_56 = L3_54.sub
        L5_56 = L5_56(L3_54, 1, 12)
        L3_54 = L5_56
      end
    end
  end
  L5_56 = A0_51.gsub
  L5_56 = L5_56(A0_51, ":", "")
  if require("luci.model.uci").cursor():get("devicelist", "notify", L5_56) then
    _UPVALUE1_.log(6, "Special Device DisConnect.", L2_53)
    require("xiaoqiang.util.XQDBUtil").vip_device_pre_push(A0_51, L3_54, "offline")
  end
end
function _hookAllDownloadFinished()
  local L0_57
  L0_57 = _UPVALUE0_
  L0_57 = L0_57.log
  L0_57(6, "All download finished")
  L0_57 = {}
  L0_57.type = 5
  _doPush(_UPVALUE1_.encode(L0_57), "\228\184\139\232\189\189\229\174\140\230\136\144", "\228\184\139\232\189\189\229\174\140\230\136\144")
end
function _hookIntelligentScene(A0_58, A1_59)
  local L2_60, L3_61
  L2_60 = A0_58
  L3_61 = _UPVALUE0_
  L3_61 = L3_61.isStrNil
  L3_61 = L3_61(L2_60)
  if L3_61 then
    L2_60 = ""
  end
  L3_61 = _UPVALUE1_
  L3_61 = L3_61.log
  L3_61(6, "Intelligent Scene:" .. A0_58 .. " finished!")
  L3_61 = {}
  L3_61.type = 6
  L3_61.name = A0_58
  L3_61.actions = A1_59
  _doPush(_UPVALUE2_.encode(L3_61), "\230\153\186\232\131\189\229\156\186\230\153\175", "\230\153\186\232\131\189\229\156\186\230\153\175")
end
function _hookDetectFinished(A0_62, A1_63)
  local L2_64
  if A0_62 and A1_63 then
    L2_64 = _UPVALUE0_
    L2_64 = L2_64.log
    L2_64(6, "network detect finished!")
    L2_64 = {}
    L2_64.type = 7
    L2_64.lan = A0_62
    L2_64.wan = A1_63
    _doPush(_UPVALUE1_.encode(L2_64), "\231\189\145\231\187\156\230\163\128\230\181\139", "\231\189\145\231\187\156\230\163\128\230\181\139")
  end
end
function _hookCachecenterEvent(A0_65, A1_66)
  local L2_67
  if A0_65 and A1_66 then
    L2_67 = _UPVALUE0_
    L2_67 = L2_67.log
    L2_67(6, "cachecenter event!")
    L2_67 = {}
    L2_67.type = 13
    L2_67.hitcount = A0_65
    L2_67.timesaver = A1_66
    _doPush(_UPVALUE1_.encode(L2_67), "\229\138\160\233\128\159\231\155\184\229\133\179", "\229\138\160\233\128\159\231\155\184\229\133\179")
  end
end
function _hookDownloadEvent(A0_68)
  local L1_69
  L1_69 = tonumber
  L1_69 = L1_69(A0_68)
  if L1_69 then
    L1_69 = _UPVALUE0_
    L1_69 = L1_69.log
    L1_69(6, "download event!")
    L1_69 = {}
    L1_69.type = 17
    L1_69.count = tonumber(A0_68)
    _doPush(_UPVALUE1_.encode(L1_69), "\228\184\139\232\189\189\229\174\140\230\136\144", "\228\184\139\232\189\189\229\174\140\230\136\144")
  end
end
function _hookUploadEvent(A0_70)
  local L1_71
  L1_71 = tonumber
  L1_71 = L1_71(A0_70)
  if L1_71 then
    L1_71 = _UPVALUE0_
    L1_71 = L1_71.log
    L1_71(6, "upload event!")
    L1_71 = {}
    L1_71.type = 18
    L1_71.count = tonumber(A0_70)
    _doPush(_UPVALUE1_.encode(L1_71), "\228\184\138\228\188\160\229\174\140\230\136\144", "\228\184\138\228\188\160\229\174\140\230\136\144")
  end
end
function _hookADFilterEvent(A0_72, A1_73)
  local L2_74
  L2_74 = tonumber
  L2_74 = L2_74(A0_72)
  if L2_74 then
    L2_74 = tonumber
    L2_74 = L2_74(A1_73)
    if L2_74 then
      L2_74 = _UPVALUE0_
      L2_74 = L2_74.log
      L2_74(6, "upload event!")
      L2_74 = {}
      L2_74.type = 19
      L2_74.page = tonumber(A0_72)
      L2_74.all = tonumber(A1_73)
      _doPush(_UPVALUE1_.encode(L2_74), "\229\185\191\229\145\138\232\191\135\230\187\164", "\229\185\191\229\145\138\232\191\135\230\187\164")
    end
  end
end
function _hookDefault(A0_75)
  local L1_76
  L1_76 = _UPVALUE0_
  L1_76 = L1_76.log
  L1_76(6, "Unknown Feed")
  L1_76 = {}
  L1_76.type = 999
  L1_76.data = A0_75
  _doPush(_UPVALUE1_.encode(L1_76), "\230\150\176\230\182\136\230\129\175", "\230\156\170\229\174\154\228\185\137")
end
function _hookNewRomVersionDetected(A0_77)
  local L1_78, L2_79, L3_80, L4_81, L5_82, L6_83
  L1_78 = _UPVALUE0_
  L1_78 = L1_78.log
  L2_79 = 6
  L3_80 = "New ROM version detected"
  L1_78(L2_79, L3_80)
  L1_78 = require
  L2_79 = "xiaoqiang.XQPreference"
  L1_78 = L1_78(L2_79)
  L2_79 = require
  L3_80 = "xiaoqiang.common.XQConfigs"
  L2_79 = L2_79(L3_80)
  L3_80 = L1_78.get
  L4_81 = L2_79.PREF_ROUTER_NAME
  L5_82 = ""
  L3_80 = L3_80(L4_81, L5_82)
  L4_81 = require
  L5_82 = "xiaoqiang.util.XQSysUtil"
  L4_81 = L4_81(L5_82)
  L5_82 = L4_81.getChannel
  L5_82 = L5_82()
  L6_83 = {}
  L6_83.type = 14
  L6_83.name = L3_80
  L6_83.version = A0_77
  L6_83.channel = L5_82
  _doPush(_UPVALUE1_.encode(L6_83), "\229\143\145\231\142\176\230\150\176\231\137\136\230\156\172", "\229\143\145\231\142\176\230\150\176\231\137\136\230\156\172")
end
function _hookWifiImproveNotify()
  local L0_84
  L0_84 = {}
  L0_84.type = 29
  _doPush(_UPVALUE0_.encode(L0_84), "\228\191\161\233\129\147\229\143\175\228\187\165\228\188\152\229\140\150", "\228\191\161\233\129\147\229\143\175\228\187\165\228\188\152\229\140\150")
end
function _hookWifiAuthenFailed(A0_85)
  local L1_86, L2_87, L3_88, L4_89, L5_90, L6_91, L7_92, L8_93, L9_94, L10_95, L11_96
  L1_86 = _UPVALUE0_
  L1_86 = L1_86.isStrNil
  L2_87 = A0_85
  L1_86 = L1_86(L2_87)
  if L1_86 then
    return
  else
    L1_86 = _UPVALUE0_
    L1_86 = L1_86.macFormat
    L2_87 = A0_85
    L1_86 = L1_86(L2_87)
    A0_85 = L1_86
  end
  L1_86 = require
  L2_87 = "xiaoqiang.module.XQAntiRubNetwork"
  L1_86 = L1_86(L2_87)
  L2_87 = tonumber
  L3_88 = os
  L3_88 = L3_88.time
  L11_96 = L3_88()
  L2_87 = L2_87(L3_88, L4_89, L5_90, L6_91, L7_92, L8_93, L9_94, L10_95, L11_96, L3_88())
  L3_88 = _UPVALUE1_
  L3_88 = L3_88.pushSettings
  L3_88 = L3_88()
  L4_89 = L1_86.wifiAuthenFailedAction
  L5_90 = A0_85
  L4_89 = L4_89(L5_90)
  if L4_89 then
    L5_90 = L3_88.auth
    if L5_90 then
      L5_90 = _UPVALUE1_
      L5_90 = L5_90.getwifiauthfailedserialtimes
      L6_91 = A0_85
      L5_90 = L5_90(L6_91)
      if L5_90 >= 5 then
        L5_90 = _UPVALUE1_
        L5_90 = L5_90.setwifiauthfailedserialtimes
        L6_91 = A0_85
        L7_92 = 0
        L5_90(L6_91, L7_92)
        L5_90 = L3_88.level
        if L5_90 then
          L5_90 = L3_88.level
          if L5_90 == 2 then
            L5_90 = {}
            L5_90.type = 51
            L5_90.mac = A0_85
            L5_90.count = L4_89
            L6_91 = {}
            L6_91.eventID = 1001
            L7_92 = {}
            L7_92.mac = A0_85
            L7_92.count = L4_89
            L6_91.payload = L7_92
            L7_92 = _matool
            L8_93 = _UPVALUE2_
            L8_93 = L8_93.encode
            L9_94 = L6_91
            L11_96 = L8_93(L9_94)
            L7_92(L8_93, L9_94, L10_95, L11_96, L8_93(L9_94))
            L7_92 = "MWIFI_"
            L9_94 = A0_85
            L8_93 = A0_85.gsub
            L10_95 = ":"
            L11_96 = ""
            L8_93 = L8_93(L9_94, L10_95, L11_96)
            L7_92 = L7_92 .. L8_93
            L8_93 = _UPVALUE1_
            L8_93 = L8_93.getTimestamp
            L9_94 = L7_92
            L8_93 = L8_93(L9_94)
            L9_94 = L2_87 - L8_93
            if L9_94 > 7200 then
              L9_94 = _UPVALUE1_
              L9_94 = L9_94.setTimestamp
              L10_95 = L7_92
              L11_96 = L2_87
              L9_94 = L9_94(L10_95, L11_96)
              if not L9_94 then
                return
              end
              L9_94 = _doPush
              L10_95 = _UPVALUE2_
              L10_95 = L10_95.encode
              L11_96 = L5_90
              L10_95 = L10_95(L11_96)
              L11_96 = "WiFi\229\175\134\231\160\129\233\148\153\232\175\175"
              L9_94(L10_95, L11_96, "\230\156\137\233\163\142\233\153\169")
            end
          end
        else
          L5_90 = L3_88.level
          if L5_90 then
            L5_90 = L3_88.level
            if L5_90 == 3 then
              L5_90 = require
              L6_91 = "xiaoqiang.util.XQWifiUtil"
              L5_90 = L5_90(L6_91)
              L6_91 = L5_90.editWiFiMacfilterList
              L7_92 = 0
              L8_93 = {L9_94}
              L9_94 = A0_85
              L9_94 = 0
              L6_91(L7_92, L8_93, L9_94)
              L6_91 = require
              L7_92 = "luci.model.uci"
              L6_91 = L6_91(L7_92)
              L6_91 = L6_91.cursor
              L6_91 = L6_91()
              L8_93 = L6_91
              L7_92 = L6_91.get
              L9_94 = "misc"
              L10_95 = "hardware"
              L11_96 = "model"
              L7_92 = L7_92(L8_93, L9_94, L10_95, L11_96)
              L7_92 = L7_92 or ""
              if L7_92 then
                L8_93 = string
                L8_93 = L8_93.lower
                L9_94 = L7_92
                L8_93 = L8_93(L9_94)
                L7_92 = L8_93
              end
              L9_94 = L6_91
              L8_93 = L6_91.get
              L10_95 = "xiaoqiang"
              L11_96 = "common"
              L8_93 = L8_93(L9_94, L10_95, L11_96, "NETMODE")
              L8_93 = L8_93 or ""
              L10_95 = L7_92
              L9_94 = L7_92.match
              L11_96 = "^d01"
              L9_94 = L9_94(L10_95, L11_96)
              if L9_94 then
                L10_95 = L8_93
                L9_94 = L8_93.match
                L11_96 = "^whc_cap"
                L9_94 = L9_94(L10_95, L11_96)
                if L9_94 then
                  L9_94 = _UPVALUE0_
                  L9_94 = L9_94.forkExec
                  L10_95 = "/sbin/notice_tbus_device_maclist.sh"
                  L9_94(L10_95)
                end
              end
              L9_94 = {}
              L9_94.type = 52
              L9_94.mac = A0_85
              L9_94.count = L4_89
              L10_95 = {}
              L10_95.eventID = 1002
              L11_96 = {}
              L11_96.mac = A0_85
              L11_96.count = L4_89
              L10_95.payload = L11_96
              L11_96 = _matool
              L11_96(_UPVALUE2_.encode(L10_95))
              L11_96 = "HWIFI_"
              L11_96 = L11_96 .. A0_85:gsub(":", "")
              if L2_87 - _UPVALUE1_.getTimestamp(L11_96) > 7200 then
                if not _UPVALUE1_.setTimestamp(L11_96, L2_87) then
                  return
                end
                _doPush(_UPVALUE2_.encode(L9_94), "WiFi\229\175\134\231\160\129\233\148\153\232\175\175", "\229\188\186\229\136\182\230\139\137\233\187\145")
              end
            end
          end
        end
      end
    end
  end
end
function _hookLoginAuthenFailed(A0_97)
  local L1_98, L2_99, L3_100, L4_101, L5_102, L6_103, L7_104, L8_105, L9_106, L10_107, L11_108
  L1_98 = _UPVALUE0_
  L1_98 = L1_98.isStrNil
  L2_99 = A0_97
  L1_98 = L1_98(L2_99)
  if L1_98 then
    return
  else
    L1_98 = _UPVALUE0_
    L1_98 = L1_98.macFormat
    L2_99 = A0_97
    L1_98 = L1_98(L2_99)
    A0_97 = L1_98
  end
  L1_98 = require
  L2_99 = "xiaoqiang.util.XQWifiUtil"
  L1_98 = L1_98(L2_99)
  L2_99 = require
  L3_100 = "xiaoqiang.module.XQAntiRubNetwork"
  L2_99 = L2_99(L3_100)
  L3_100 = tonumber
  L4_101 = os
  L4_101 = L4_101.time
  L11_108 = L4_101()
  L3_100 = L3_100(L4_101, L5_102, L6_103, L7_104, L8_105, L9_106, L10_107, L11_108, L4_101())
  L4_101 = _UPVALUE1_
  L4_101 = L4_101.pushSettings
  L4_101 = L4_101()
  L5_102 = L2_99.LoginAuthenFailedAction
  L6_103 = A0_97
  L5_102 = L5_102(L6_103)
  if L5_102 then
    L6_103 = require
    L7_104 = "luci.cbi.datatypes"
    L6_103 = L6_103(L7_104)
    if A0_97 then
      L7_104 = L6_103.macaddr
      L8_105 = A0_97
      L7_104 = L7_104(L8_105)
      if L7_104 then
        L7_104 = os
        L7_104 = L7_104.execute
        L8_105 = "/usr/sbin/ban_admin ban "
        L9_106 = A0_97
        L8_105 = L8_105 .. L9_106
        L7_104(L8_105)
      end
    end
  end
  if L5_102 then
    L6_103 = L4_101.auth
    if L6_103 then
      L6_103 = require
      L7_104 = "luci.model.uci"
      L6_103 = L6_103(L7_104)
      L6_103 = L6_103.cursor
      L6_103 = L6_103()
      L8_105 = L6_103
      L7_104 = L6_103.get
      L9_106 = "misc"
      L10_107 = "hardware"
      L11_108 = "model"
      L7_104 = L7_104(L8_105, L9_106, L10_107, L11_108)
      L7_104 = L7_104 or ""
      if L7_104 then
        L8_105 = string
        L8_105 = L8_105.lower
        L9_106 = L7_104
        L8_105 = L8_105(L9_106)
        L7_104 = L8_105
      end
      L9_106 = L7_104
      L8_105 = L7_104.match
      L10_107 = "^d01"
      L8_105 = L8_105(L9_106, L10_107)
      if L8_105 == nil then
        L8_105 = L1_98.getAllWifiConnetDeviceDict
        L8_105 = L8_105()
        L9_106 = L8_105[A0_97]
        if not L9_106 then
          return
        end
      end
      L8_105 = L4_101.level
      if L8_105 then
        L8_105 = L4_101.level
        if L8_105 == 2 then
          L8_105 = {}
          L8_105.type = 53
          L8_105.mac = A0_97
          L8_105.count = L5_102
          L9_106 = {}
          L9_106.eventID = 1003
          L10_107 = {}
          L10_107.mac = A0_97
          L10_107.count = L5_102
          L9_106.payload = L10_107
          L10_107 = _matool
          L11_108 = _UPVALUE2_
          L11_108 = L11_108.encode
          L11_108 = L11_108(L9_106)
          L10_107(L11_108, L11_108(L9_106))
          L10_107 = "MLOGIN_"
          L11_108 = A0_97.gsub
          L11_108 = L11_108(A0_97, ":", "")
          L10_107 = L10_107 .. L11_108
          L11_108 = _UPVALUE1_
          L11_108 = L11_108.getTimestamp
          L11_108 = L11_108(L10_107)
          if L3_100 - L11_108 > 7200 then
            _doPush(_UPVALUE2_.encode(L8_105), "\231\174\161\231\144\134\229\145\152\229\175\134\231\160\129\233\148\153\232\175\175", "\230\156\137\233\163\142\233\153\169")
            _UPVALUE1_.setTimestamp(L10_107, L3_100)
          end
        end
      else
        L8_105 = L4_101.level
        if L8_105 then
          L8_105 = L4_101.level
          if L8_105 == 3 then
            L8_105 = L1_98.editWiFiMacfilterList
            L9_106 = 0
            L10_107 = {L11_108}
            L11_108 = A0_97
            L11_108 = 0
            L8_105(L9_106, L10_107, L11_108)
            L9_106 = L6_103
            L8_105 = L6_103.get
            L10_107 = "xiaoqiang"
            L11_108 = "common"
            L8_105 = L8_105(L9_106, L10_107, L11_108, "NETMODE")
            L8_105 = L8_105 or ""
            L10_107 = L7_104
            L9_106 = L7_104.match
            L11_108 = "^d01"
            L9_106 = L9_106(L10_107, L11_108)
            if L9_106 then
              L10_107 = L8_105
              L9_106 = L8_105.match
              L11_108 = "^whc_cap"
              L9_106 = L9_106(L10_107, L11_108)
              if L9_106 then
                L9_106 = _UPVALUE0_
                L9_106 = L9_106.forkExec
                L10_107 = "/sbin/notice_tbus_device_maclist.sh"
                L9_106(L10_107)
              end
            end
            L9_106 = {}
            L9_106.type = 54
            L9_106.mac = A0_97
            L9_106.count = L5_102
            L10_107 = {}
            L10_107.eventID = 1004
            L11_108 = {}
            L11_108.mac = A0_97
            L11_108.count = L5_102
            L10_107.payload = L11_108
            L11_108 = _matool
            L11_108(_UPVALUE2_.encode(L10_107), true)
            L11_108 = "HLOGIN_"
            L11_108 = L11_108 .. A0_97:gsub(":", "")
            if L3_100 - _UPVALUE1_.getTimestamp(L11_108) > 7200 then
              _doPush(_UPVALUE2_.encode(L9_106), "\231\174\161\231\144\134\229\145\152\229\175\134\231\160\129\233\148\153\232\175\175", "\229\188\186\229\136\182\230\139\137\233\187\145")
              _UPVALUE1_.setTimestamp(L11_108, L3_100)
            end
          end
        end
      end
    end
  end
end
function _hookWifiBlacklisted(A0_109)
  local L1_110, L2_111, L3_112, L4_113, L5_114, L6_115
  L1_110 = _UPVALUE0_
  L1_110 = L1_110.isStrNil
  L2_111 = A0_109
  L1_110 = L1_110(L2_111)
  if L1_110 then
    return
  else
    L1_110 = _UPVALUE0_
    L1_110 = L1_110.macFormat
    L2_111 = A0_109
    L1_110 = L1_110(L2_111)
    A0_109 = L1_110
  end
  L1_110 = require
  L2_111 = "xiaoqiang.util.XQWifiUtil"
  L1_110 = L1_110(L2_111)
  L2_111 = require
  L3_112 = "xiaoqiang.module.XQAntiRubNetwork"
  L2_111 = L2_111(L3_112)
  L3_112 = _UPVALUE1_
  L3_112 = L3_112.pushSettings
  L3_112 = L3_112()
  L4_113 = L2_111.wifiBlacklistedAction
  L5_114 = A0_109
  L4_113 = L4_113(L5_114)
  L5_114 = L1_110.getWiFiMacfilterModel
  L5_114 = L5_114()
  if L4_113 then
    L6_115 = L3_112.auth
    if L6_115 then
      L6_115 = {}
      L6_115.eventID = 1005
      L6_115.payload = {mac = A0_109, count = L4_113}
      if L5_114 and L5_114 == 2 then
        L6_115.eventID = 1001
      end
      _matool(_UPVALUE2_.encode(L6_115))
    end
  end
end
function _hook5GWifiCrashed()
  require("xiaoqiang.module.XQMessageBox").addMessage({
    type = 3,
    data = {}
  })
  _doPush("{\"type\":55}", "5G WiFi\229\151\157\229\177\129\228\186\134", "5G WiFi\229\151\157\229\177\129\228\186\134")
end
function push_to_cap(A0_116)
  local L1_117, L2_118, L3_119, L4_120, L5_121, L6_122
  L1_117 = require
  L2_118 = "xiaoqiang.common.XQFunction"
  L1_117 = L1_117(L2_118)
  L2_118 = require
  L3_119 = "cjson"
  L2_118 = L2_118(L3_119)
  L3_119 = tonumber
  L4_120 = A0_116.type
  L3_119 = L3_119(L4_120)
  L4_120 = nil
  if L3_119 == 14 then
    L4_120 = 1
  elseif L3_119 == 15 then
    L4_120 = 2
  elseif L3_119 == 16 then
    L4_120 = 3
  end
  L5_121 = {}
  L5_121.msgtype = L4_120
  L5_121.msg = A0_116
  L6_122 = L2_118.encode
  L6_122 = L6_122(L5_121)
  _UPVALUE0_.log(4, "push to cap data_j=", L6_122)
  L1_117.forkExec(string.format("ubus call trafficd whc_common_push \"%s\"", L1_117._cmdformat(L6_122)))
end
function push_request_lua(A0_123)
  local L1_124, L2_125
  L1_124 = require
  L2_125 = "luci.model.uci"
  L1_124 = L1_124(L2_125)
  L1_124 = L1_124.cursor
  L1_124 = L1_124()
  L2_125 = L1_124.get
  L2_125 = L2_125(L1_124, "misc", "hardware", "model")
  L2_125 = L2_125 or ""
  L2_125 = L2_125 and string.lower(L2_125)
  if L2_125:match("^d01") and (L1_124:get("xiaoqiang", "common", "NETMODE") or ""):match("^whc_re") then
  end
  if tonumber(A0_123.type) == 1 then
    _hookWifiConnect(A0_123.data.mac, A0_123.data.dev)
  elseif tonumber(A0_123.type) == 2 then
    _hookWifiDisconnect(A0_123.data.mac)
  elseif tonumber(A0_123.type) == 3 then
    _hookSysUpgraded()
  elseif tonumber(A0_123.type) == 4 then
    _hookAllDownloadFinished()
  elseif tonumber(A0_123.type) == 5 then
    _hookIntelligentScene(A0_123.data.name, A0_123.data.list)
  elseif tonumber(A0_123.type) == 6 then
    _hookDetectFinished(A0_123.data.lan, A0_123.data.wan)
  elseif tonumber(A0_123.type) == 7 then
    _hookCachecenterEvent(A0_123.data.hit_count, A0_123.data.timesaver)
  elseif tonumber(A0_123.type) == 8 then
    _hookNewRomVersionDetected(A0_123.data.version)
  elseif tonumber(A0_123.type) == 9 then
    _hookDownloadEvent(A0_123.data.count)
  elseif tonumber(A0_123.type) == 10 then
    _hookUploadEvent(A0_123.data.count)
  elseif tonumber(A0_123.type) == 11 then
    _hookADFilterEvent(A0_123.data.filter_page, A0_123.data.filter_all)
  elseif tonumber(A0_123.type) == 13 then
    _hookWifiImproveNotify()
  elseif tonumber(A0_123.type) == 14 then
    if 1 == 1 then
      push_to_cap(A0_123)
    else
      _hookWifiAuthenFailed(A0_123.data.mac)
    end
  elseif tonumber(A0_123.type) == 15 then
    if 1 == 1 then
      push_to_cap(A0_123)
    else
      _hookWifiBlacklisted(A0_123.data.mac)
    end
  elseif tonumber(A0_123.type) == 16 then
    if 1 == 1 then
      push_to_cap(A0_123)
    else
      _hookLoginAuthenFailed(A0_123.data.mac)
    end
  elseif tonumber(A0_123.type) == 50 then
    _hook5GWifiCrashed()
  else
    _hookDefault(A0_123.data)
  end
  return true
end
function push_request(A0_126)
  local L1_127
  L1_127 = _UPVALUE0_
  L1_127 = L1_127.isStrNil
  L1_127 = L1_127(A0_126)
  if L1_127 then
    L1_127 = false
    return L1_127
  end
  L1_127 = _UPVALUE1_
  L1_127 = L1_127.decode
  L1_127 = L1_127(A0_126)
  return push_request_lua(L1_127)
end
