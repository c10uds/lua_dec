local L0_0
L0_0 = module
L0_0("luci.i18n", package.seeall)
L0_0 = require
L0_0("luci.util")
L0_0 = require
L0_0 = L0_0("luci.template.parser")
table = {}
i18ndir = luci.util.libpath() .. "/i18n/"
loaded = {}
context = luci.util.threadlocal()
default = "en"
function clear()
  local L0_1, L1_2
end
function load(A0_3, A1_4, A2_5)
end
function loadc(A0_6, A1_7)
end
function setlanguage(A0_8)
  context.lang = A0_8:gsub("_", "-")
  context.parent = context.lang:match("^([a-z][a-z])_")
  if not _UPVALUE0_.load_catalog(context.lang, i18ndir) and context.parent then
    _UPVALUE0_.load_catalog(context.parent, i18ndir)
    return context.parent
  end
  return context.lang
end
function translate(A0_9)
  return _UPVALUE0_.translate(A0_9) or A0_9
end
function translatef(A0_10, ...)
  return tostring(translate(A0_10)):format(...)
end
function string(A0_12)
  local L1_13
  L1_13 = tostring
  return L1_13(translate(A0_12))
end
function stringf(A0_14, ...)
  return tostring(translate(A0_14)):format(...)
end
