local L0_0, L1_1, L2_2, L3_3, L4_4, L5_5, L6_6
L0_0 = require
L1_1 = "luci.util"
L0_0 = L0_0(L1_1)
L1_1 = require
L2_2 = "luci.config"
L1_1 = L1_1(L2_2)
L2_2 = require
L3_3 = "luci.template.parser"
L2_2 = L2_2(L3_3)
L3_3 = tostring
L4_4 = pairs
L5_5 = loadstring
L6_6 = setmetatable
module("luci.template")
L1_1.template = L1_1.template or {}
viewdir = L1_1.template.viewdir or L0_0.libpath() .. "/view"
context = L0_0.threadlocal()
function render(A0_7, A1_8)
  return Template(A0_7):render(A1_8 or _UPVALUE0_(2))
end
Template = L0_0.class()
Template.cache = L6_6({}, {__mode = "v"})
function Template.__init__(A0_9, A1_10)
  local L2_11, L3_12
  L2_11 = A0_9.cache
  L2_11 = L2_11[A1_10]
  A0_9.template = L2_11
  A0_9.name = A1_10
  L2_11 = context
  L2_11 = L2_11.viewns
  A0_9.viewns = L2_11
  L2_11 = A0_9.template
  if not L2_11 then
    L2_11 = nil
    L3_12 = viewdir
    L3_12 = L3_12 .. "/" .. A1_10 .. ".htm"
    A0_9.template, _, L2_11 = _UPVALUE0_.parse(L3_12)
    if not A0_9.template then
      _UPVALUE1_("Failed to load template '" .. A1_10 .. "'.\n" .. "Error while parsing template '" .. L3_12 .. "':\n" .. (L2_11 or "Unknown syntax error"))
    else
      A0_9.cache[A1_10] = A0_9.template
    end
  end
end
function Template.render(A0_13, A1_14)
  A1_14 = A1_14 or _UPVALUE0_(2)
  _UPVALUE1_(A0_13.template, _UPVALUE2_({}, {
    __index = function(A0_15, A1_16)
      return _UPVALUE0_(A0_15, A1_16) or _UPVALUE1_.viewns[A1_16] or _UPVALUE2_[A1_16]
    end
  }))
  if not _UPVALUE4_.copcall(A0_13.template) then
    _UPVALUE5_("Failed to execute template '" .. A0_13.name .. "'.\n" .. "A runtime error occured: " .. _UPVALUE6_(_UPVALUE4_.copcall(A0_13.template) or "(nil)"))
  end
end
