local L0_0
L0_0 = module
L0_0("luci.controller.api.misns", package.seeall)
function L0_0()
  node("api", "misns").target = firstchild()
  node("api", "misns").title = ""
  node("api", "misns").order = 200
  node("api", "misns").sysauth = "admin"
  node("api", "misns").sysauth_authenticator = "jsonauth"
  node("api", "misns").index = true
  entry({"api", "misns"}, firstchild(), "", 200)
  entry({
    "api",
    "misns",
    "prepare"
  }, call("prepare"), "", 201, 1)
  entry({
    "api",
    "misns",
    "wifi_share_switch"
  }, call("wifiShare"), "", 202)
  entry({
    "api",
    "misns",
    "wifi_access"
  }, call("wifiAccess"), "", 203)
  entry({
    "api",
    "misns",
    "wifi_share_info"
  }, call("wifiShareInfo"), "", 204)
  entry({
    "api",
    "misns",
    "sns_list"
  }, call("snsList"), "", 205)
  entry({
    "api",
    "misns",
    "sns_init"
  }, call("snsInit"), "", 206, 1)
  entry({
    "api",
    "misns",
    "wifi_share_clear"
  }, call("wifiShareClearAll"), "", 207)
  entry({
    "api",
    "misns",
    "wifi_share_blist"
  }, call("wifiShareBlacklist"), "", 208)
  entry({
    "api",
    "misns",
    "wifi_share_blist_edit"
  }, call("wifiShareBlacklistEdit"), "", 209)
  entry({
    "api",
    "misns",
    "authorization_status"
  }, call("authorizationStatus"), "", 210, 1)
  entry({
    "api",
    "misns",
    "wifi_share_info_web"
  }, call("wifiShareInfoWeb"), "", 211, 1)
  entry({
    "api",
    "misns",
    "wifi_share_rent_switch"
  }, call("wifiShareRentSwitch"), "", 212)
  entry({
    "api",
    "misns",
    "prepare_status"
  }, call("prepareStatus"), "", 213, 1)
  entry({
    "api",
    "misns",
    "prepare_bytype"
  }, call("prepare"), "", 201, 1)
  entry({
    "api",
    "misns",
    "ios_ready"
  }, call("iosReady"), "", 214, 1)
end
index = L0_0
L0_0 = require
L0_0 = L0_0("luci.http")
function check_para(A0_1)
  local L1_2
  L1_2 = "[`;'|$&{} ]"
  if _UPVALUE0_.isStrNil(A0_1) then
    return true
  end
  if string.find(A0_1, L1_2) then
    return false
  end
  return true
end
function wifiShareInfoWeb()
  local L0_3, L1_4
  L0_3 = {}
  L0_3.code = 0
  L1_4 = _UPVALUE0_
  L1_4 = L1_4.formvalue
  L1_4 = L1_4("callback")
  L0_3.info = _UPVALUE1_.wifi_share_info_web()
  _UPVALUE0_.write_jsonp(L0_3, L1_4)
end
function wifiShareInfo()
  local L0_5
  L0_5 = {}
  L0_5.code = 0
  L0_5.info = _UPVALUE0_.wifi_share_info()
  _UPVALUE1_.write_json(L0_5)
end
function getGuestWifi_ssid_guest()
  local L0_6, L1_7, L2_8, L3_9, L4_10, L5_11, L6_12, L7_13
  L0_6 = require
  L1_7 = "luci.model.uci"
  L0_6 = L0_6(L1_7)
  L0_6 = L0_6.cursor
  L0_6 = L0_6()
  L2_8 = L0_6
  L1_7 = L0_6.get
  L3_9 = "network"
  L4_10 = "wan"
  L5_11 = "ifname"
  L1_7 = L1_7(L2_8, L3_9, L4_10, L5_11)
  L2_8 = _UPVALUE0_
  L2_8 = L2_8.exec
  L3_9 = string
  L3_9 = L3_9.format
  L4_10 = "ifconfig %s | grep HWaddr |awk -F ' ' '{print $5}'"
  L5_11 = L1_7
  L7_13 = L3_9(L4_10, L5_11)
  L2_8 = L2_8(L3_9, L4_10, L5_11, L6_12, L7_13, L3_9(L4_10, L5_11))
  L3_9 = string
  L3_9 = L3_9.upper
  L4_10 = string
  L4_10 = L4_10.sub
  L5_11 = string
  L5_11 = L5_11.gsub
  L6_12 = L2_8
  L7_13 = ":"
  L5_11 = L5_11(L6_12, L7_13, "")
  L6_12 = 4294967291
  L7_13 = 4294967294
  L7_13 = L4_10(L5_11, L6_12, L7_13)
  L3_9 = L3_9(L4_10, L5_11, L6_12, L7_13, L4_10(L5_11, L6_12, L7_13))
  L4_10 = require
  L5_11 = "xiaoqiang.XQCountryCode"
  L4_10 = L4_10(L5_11)
  L5_11 = L4_10.getCurrentCountryCode
  L5_11 = L5_11()
  L6_12 = nil
  L7_13 = "  MiShareWiFi_"
  if L5_11 == "CN" then
    L7_13 = "  \229\176\143\231\177\179\229\133\177\228\186\171WiFi_"
  end
  L6_12 = L7_13 .. L3_9
  return L6_12
end
function snsInit()
  local L0_14, L1_15, L2_16, L3_17, L4_18, L5_19, L6_20, L7_21, L8_22, L9_23
  L0_14 = require
  L1_15 = "xiaoqiang.util.XQWifiUtil"
  L0_14 = L0_14(L1_15)
  L1_15 = require
  L2_16 = "xiaoqiang.util.XQDeviceUtil"
  L1_15 = L1_15(L2_16)
  L2_16 = require
  L3_17 = "xiaoqiang.util.XQNetUtil"
  L2_16 = L2_16(L3_17)
  L3_17 = {}
  L3_17.code = 0
  L3_17.clientinfo = ""
  L3_17.ssid = ""
  L3_17.deviceid = ""
  L4_18 = _UPVALUE0_
  L4_18 = L4_18.formvalue
  L5_19 = "callback"
  L4_18 = L4_18(L5_19)
  L5_19 = luci
  L5_19 = L5_19.dispatcher
  L5_19 = L5_19.getremotemac
  L5_19 = L5_19()
  L6_20 = getGuestWifi_ssid_guest
  L6_20 = L6_20()
  L7_21 = L1_15.getDHCPDict
  L7_21 = L7_21()
  L7_21 = L7_21[L5_19]
  L7_21 = L7_21 or {}
  L8_22 = L7_21.name
  L8_22 = L8_22 or ""
  L9_23 = string
  L9_23 = L9_23.format
  L9_23 = L9_23("matool --method enc --params \"{\\\"mac\\\":\\\"%s\\\",\\\"dhcp\\\":\\\"%s\\\"}\"", L5_19, L8_22)
  L3_17.clientinfo = _UPVALUE1_.trim(_UPVALUE1_.exec(L9_23))
  L3_17.ssid = L6_20
  L3_17.deviceid = L2_16.getDeviceId()
  _UPVALUE0_.write_jsonp(L3_17, L4_18)
end
function prepare()
  local L0_24, L1_25, L2_26, L3_27, L4_28
  L0_24 = {}
  L0_24.code = 0
  L1_25 = _UPVALUE0_
  L1_25 = L1_25.formvalue
  L2_26 = "callback"
  L1_25 = L1_25(L2_26)
  L2_26 = luci
  L2_26 = L2_26.dispatcher
  L2_26 = L2_26.getremotemac
  L2_26 = L2_26()
  L3_27 = _UPVALUE0_
  L3_27 = L3_27.formvalue
  L4_28 = "t"
  L3_27 = L3_27(L4_28)
  L4_28 = 1
  if not L3_27 or L3_27 == "normal" then
    L4_28 = 1
  elseif L3_27 == "dl" then
    L4_28 = 2
  elseif L3_27 == "ad" then
    L4_28 = 3
  else
    L0_24.code = 1523
  end
  if L4_28 > 0 and L4_28 <= 3 then
    if not _UPVALUE1_.wifi_share_prepare(L2_26, L4_28) then
      L0_24.code = 1657
    else
      L0_24.code = 0
    end
  end
  if L0_24.code ~= 0 then
    L0_24.msg = _UPVALUE2_.getErrorMessage(L0_24.code)
  end
  _UPVALUE0_.write_jsonp(L0_24, L1_25)
end
function prepareStatus()
  local L0_29, L1_30
  L0_29 = {}
  L0_29.code = 0
  L1_30 = luci
  L1_30 = L1_30.dispatcher
  L1_30 = L1_30.getremotemac
  L1_30 = L1_30()
  L0_29.status = _UPVALUE0_.wifi_share_prepare_status(L1_30)
  _UPVALUE1_.write_jsonp(L0_29, callback)
end
function wifiShareRentSwitch()
  local L0_31, L1_32, L2_33, L3_34, L4_35, L5_36, L6_37, L7_38, L8_39
  L0_31 = require
  L1_32 = "xiaoqiang.util.XQSecureUtil"
  L0_31 = L0_31(L1_32)
  L1_32 = require
  L2_33 = "json"
  L1_32 = L1_32(L2_33)
  L2_33 = _UPVALUE0_
  L2_33 = L2_33.formvalue
  L3_34 = "callback"
  L2_33 = L2_33(L3_34)
  L3_34 = {}
  L3_34.code = 0
  L4_35 = _UPVALUE1_
  L4_35 = L4_35.wifi_share_info
  L4_35 = L4_35()
  L5_36 = L4_35.need
  if L5_36 == 1 then
    L5_36 = L0_31.parseCmdline
    L6_37 = L4_35.data
    L6_37 = L6_37.ssid
    L5_36 = L5_36(L6_37)
    L6_37 = L0_31.parseCmdline
    L7_38 = L4_35.data
    L7_38 = L7_38.password
    L6_37 = L6_37(L7_38)
    L7_38 = string
    L7_38 = L7_38.format
    L8_39 = "matool --method api_call --params /device/wifi_rent/enable_wechat_pay \"{\\\"password\\\":\\\"%s\\\",\\\"ssid\\\":\\\"%s\\\",\\\"encryption\\\":\\\"none\\\"}\""
    L7_38 = L7_38(L8_39, L6_37, L5_36)
    L8_39 = _UPVALUE2_
    L8_39 = L8_39.trim
    L8_39 = L8_39(_UPVALUE2_.exec(L7_38))
    if pcall(L1_32.decode, L8_39) and pcall(L1_32.decode, L8_39).code == 0 then
      L3_34.msg = "success."
      L3_34.is_router_bound = pcall(L1_32.decode, L8_39).is_router_bound
    else
      L3_34.code = pcall(L1_32.decode, L8_39).code
      L3_34.msg = pcall(L1_32.decode, L8_39).msg
    end
  else
    L3_34.msg = "no need to set."
  end
  L5_36 = _UPVALUE0_
  L5_36 = L5_36.write_jsonp
  L6_37 = L3_34
  L7_38 = L2_33
  L5_36(L6_37, L7_38)
end
function wifiShare()
  local L0_40, L1_41, L2_42, L3_43, L4_44
  L0_40 = require
  L1_41 = "json"
  L0_40 = L0_40(L1_41)
  L1_41 = {}
  L1_41.code = 0
  L2_42 = _UPVALUE0_
  L2_42 = L2_42.formvalue
  L3_43 = "info"
  L2_42 = L2_42(L3_43)
  L3_43 = _UPVALUE1_
  L3_43 = L3_43.isStrNil
  L4_44 = L2_42
  L3_43 = L3_43(L4_44)
  if L3_43 then
    L1_41.code = 1523
  else
    L3_43 = pcall
    L4_44 = L0_40.decode
    L4_44 = L3_43(L4_44, L2_42)
    if not L3_43 then
      L1_41.code = 1523
    else
      _UPVALUE2_.set_wifi_share(L4_44)
    end
  end
  L3_43 = L1_41.code
  if L3_43 ~= 0 then
    L3_43 = _UPVALUE3_
    L3_43 = L3_43.getErrorMessage
    L4_44 = L1_41.code
    L3_43 = L3_43(L4_44)
    L1_41.msg = L3_43
  end
  L3_43 = _UPVALUE0_
  L3_43 = L3_43.write_json
  L4_44 = L1_41
  L3_43(L4_44)
end
function wifiAccess()
  local L0_45, L1_46, L2_47, L3_48, L4_49, L5_50, L6_51, L7_52, L8_53, L9_54, L10_55
  L0_45 = {}
  L0_45.code = 0
  L1_46 = _UPVALUE0_
  L1_46 = L1_46.formvalue
  L2_47 = "sns"
  L1_46 = L1_46(L2_47)
  L2_47 = _UPVALUE0_
  L2_47 = L2_47.formvalue
  L3_48 = "guest_user_id"
  L2_47 = L2_47(L3_48)
  L3_48 = _UPVALUE0_
  L3_48 = L3_48.formvalue
  L4_49 = "extra_payload"
  L3_48 = L3_48(L4_49)
  L4_49 = _UPVALUE0_
  L4_49 = L4_49.formvalue
  L5_50 = "mac"
  L4_49 = L4_49(L5_50)
  L5_50 = _UPVALUE0_
  L5_50 = L5_50.formvalue
  L6_51 = "timeout"
  L5_50 = L5_50(L6_51)
  L6_51 = tonumber
  L7_52 = _UPVALUE0_
  L7_52 = L7_52.formvalue
  L8_53 = "grant"
  L10_55 = L7_52(L8_53)
  L6_51 = L6_51(L7_52, L8_53, L9_54, L10_55, L7_52(L8_53))
  L6_51 = L6_51 or 1
  L7_52 = check_para
  L8_53 = L4_49
  L7_52 = L7_52(L8_53)
  if L7_52 then
    L7_52 = check_para
    L8_53 = L1_46
    L7_52 = L7_52(L8_53)
    if L7_52 then
      L7_52 = check_para
      L8_53 = L5_50
      L7_52 = L7_52(L8_53)
    end
  elseif not L7_52 then
    L0_45.code = 1523
    L7_52 = _UPVALUE1_
    L7_52 = L7_52.getErrorMessage
    L8_53 = L0_45.code
    L7_52 = L7_52(L8_53)
    L0_45.msg = L7_52
    L7_52 = _UPVALUE0_
    L7_52 = L7_52.write_json
    L8_53 = L0_45
    L7_52(L8_53)
    return
  end
  L5_50 = L5_50 or ""
  if L4_49 then
    L7_52 = _UPVALUE2_
    L7_52 = L7_52.macaddr
    L8_53 = L4_49
    L7_52 = L7_52(L8_53)
  else
    if not L7_52 then
      L0_45.code = 1523
  end
  else
    L7_52 = _UPVALUE3_
    L7_52 = L7_52.check_repeat_request
    L8_53 = L4_49
    L7_52 = L7_52(L8_53)
    L8_53 = _UPVALUE3_
    L8_53 = L8_53.wifi_access
    L9_54 = L4_49
    L10_55 = L1_46
    L8_53(L9_54, L10_55, L5_50, L2_47, L6_51, L3_48)
    if L6_51 == 1 then
      L8_53 = require
      L9_54 = "json"
      L8_53 = L8_53(L9_54)
      L9_54 = require
      L10_55 = "xiaoqiang.XQPushHelper"
      L9_54 = L9_54(L10_55)
      L10_55 = ""
      if not _UPVALUE4_.isStrNil(L3_48) and pcall(L8_53.decode, L3_48) and pcall(L8_53.decode, L3_48) then
        L10_55 = pcall(L8_53.decode, L3_48).nickname
      end
      if L1_46 and L1_46 ~= "wifirent" and L1_46 ~= "direct_request" and not L7_52 then
        L9_54._guestWifiConnectPush(L4_49, L1_46, L10_55)
      end
    end
    if L1_46 and L1_46 == "direct_request" and L6_51 == 0 then
      L8_53 = _UPVALUE3_
      L8_53 = L8_53.wifi_share_blacklist_edit
      L9_54 = {L10_55}
      L10_55 = L4_49
      L10_55 = "+"
      L8_53(L9_54, L10_55)
    end
  end
  L7_52 = L0_45.code
  if L7_52 ~= 0 then
    L7_52 = _UPVALUE1_
    L7_52 = L7_52.getErrorMessage
    L8_53 = L0_45.code
    L7_52 = L7_52(L8_53)
    L0_45.msg = L7_52
  end
  L7_52 = _UPVALUE0_
  L7_52 = L7_52.write_json
  L8_53 = L0_45
  L7_52(L8_53)
end
function snsList()
  local L0_56, L1_57
  L0_56 = _UPVALUE0_
  L0_56 = L0_56.formvalue
  L1_57 = "sns"
  L0_56 = L0_56(L1_57)
  L0_56 = L0_56 or "weixin"
  L1_57 = {}
  L1_57.code = 0
  L1_57.data = _UPVALUE1_.sns_list(L0_56)
  _UPVALUE0_.write_json(L1_57)
end
function wifiShareClearAll()
  local L0_58, L1_59
  L0_58 = {}
  L0_58.code = 0
  L1_59 = tonumber
  L1_59 = L1_59(_UPVALUE0_.formvalue("blacklist"))
  L1_59 = L1_59 or 0
  _UPVALUE1_.wifi_share_clearall(L1_59 == 1 and true or false)
  _UPVALUE0_.write_json(L0_58)
end
function wifiShareBlacklist()
  local L0_60
  L0_60 = {}
  L0_60.code = 0
  L0_60.list = _UPVALUE0_.wifi_share_blacklist()
  _UPVALUE1_.write_json(L0_60)
end
function wifiShareBlacklistEdit()
  local L0_61, L1_62, L2_63, L3_64, L4_65, L5_66, L6_67, L7_68, L8_69, L9_70, L10_71
  L0_61 = require
  L1_62 = "luci.util"
  L0_61 = L0_61(L1_62)
  L1_62 = {}
  L1_62.code = 0
  L2_63 = _UPVALUE0_
  L2_63 = L2_63.formvalue
  L3_64 = "macs"
  L2_63 = L2_63(L3_64)
  L3_64 = tonumber
  L4_65 = _UPVALUE0_
  L4_65 = L4_65.formvalue
  L5_66 = "option"
  L10_71 = L4_65(L5_66)
  L3_64 = L3_64(L4_65, L5_66, L6_67, L7_68, L8_69, L9_70, L10_71, L4_65(L5_66))
  if not L2_63 or not L3_64 then
    L1_62.code = 1523
  else
    L4_65 = L0_61.split
    L5_66 = L2_63
    L4_65 = L4_65(L5_66, L6_67)
    L5_66 = {}
    for L9_70, L10_71 in L6_67(L7_68) do
      if _UPVALUE1_.macaddr(L10_71) then
        table.insert(L5_66, L10_71)
      end
    end
    if L3_64 == 0 then
    else
    end
    L6_67(L7_68, L8_69)
    L1_62.list = L6_67
  end
  L4_65 = L1_62.code
  if L4_65 ~= 0 then
    L4_65 = _UPVALUE3_
    L4_65 = L4_65.getErrorMessage
    L5_66 = L1_62.code
    L4_65 = L4_65(L5_66)
    L1_62.msg = L4_65
  end
  L4_65 = _UPVALUE0_
  L4_65 = L4_65.write_json
  L5_66 = L1_62
  L4_65(L5_66)
end
function authorizationStatus()
  local L0_72, L1_73, L2_74
  L0_72 = {}
  L0_72.code = 0
  L1_73 = _UPVALUE0_
  L1_73 = L1_73.formvalue
  L2_74 = "callback"
  L1_73 = L1_73(L2_74)
  L2_74 = luci
  L2_74 = L2_74.dispatcher
  L2_74 = L2_74.getremotemac
  L2_74 = L2_74()
  L0_72.status = _UPVALUE1_.authorization_status(L2_74)
  _UPVALUE0_.write_jsonp(L0_72, L1_73)
end
function iosReady()
  local L0_75, L1_76, L2_77, L3_78
  L0_75 = {}
  L0_75.code = 0
  L1_76 = _UPVALUE0_
  L1_76 = L1_76.formvalue
  L2_77 = "callback"
  L1_76 = L1_76(L2_77)
  L2_77 = luci
  L2_77 = L2_77.dispatcher
  L2_77 = L2_77.getremotemac
  L2_77 = L2_77()
  L3_78 = string
  L3_78 = L3_78.format
  L3_78 = L3_78("/usr/sbin/wifishare.sh iosready '%s'", L2_77)
  L0_75.code = tonumber(_UPVALUE1_.trim(_UPVALUE1_.exec(L3_78)))
  _UPVALUE0_.write_jsonp(L0_75, L1_76)
end
