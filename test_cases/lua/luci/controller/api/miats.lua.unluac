local L0_0
L0_0 = module
L0_0("luci.controller.api.miats", package.seeall)
function L0_0()
  node("api", "miats").target = firstchild()
  node("api", "miats").title = ""
  node("api", "miats").order = 400
  node("api", "miats").sysauth = "admin"
  node("api", "miats").sysauth_authenticator = "jsonauth"
  node("api", "miats").index = true
  entry({"api", "miats"}, firstchild(), _(""), 400)
  entry({
    "api",
    "miats",
    "wifi_macfilter_info"
  }, call("getWifiMacfilterInfo"), "", 402, 1)
  entry({
    "api",
    "miats",
    "set_wifi_blist"
  }, call("set_wifi_black_device"), "", 403, 1)
  entry({
    "api",
    "miats",
    "get_wifi_danger_device"
  }, call("get_wifi_danger_device"), "", 404, 1)
  entry({
    "api",
    "miats",
    "get_wifi_new_block"
  }, call("get_wifi_new_block"), "", 405, 1)
  entry({
    "api",
    "miats",
    "get_new_access"
  }, call("get_new_access"), "", 406, 1)
  entry({
    "api",
    "miats",
    "get_cw_event_info"
  }, call("get_cw_event_info"), "", 407, 1)
  entry({
    "api",
    "miats",
    "remote_call"
  }, call("remote_call"), "", 408, 1)
  entry({
    "api",
    "miats",
    "get_free_speed_up_info"
  }, call("get_free_speed_up_info"), "", 409, 1)
  entry({
    "api",
    "miats",
    "free_speed_up"
  }, call("free_speed_up"), "", 410, 1)
  entry({
    "api",
    "miats",
    "vip_speed_up"
  }, call("vip_speed_up"), "", 411, 1)
  entry({
    "api",
    "miats",
    "get_vip_pay_info"
  }, call("get_vip_pay_info"), "", 412, 1)
  entry({
    "api",
    "miats",
    "get_speed_up_total_info"
  }, call("get_speed_up_total_info"), "", 413, 1)
  entry({
    "api",
    "miats",
    "get_gg_block_info"
  }, call("get_ad_block_info"), "", 414, 1)
  entry({
    "api",
    "miats",
    "valid_show_cb"
  }, call("valid_show_cb"), "", 415, 1)
  entry({
    "api",
    "miats",
    "web_enable_show"
  }, call("web_enable_show"), "", 416, 1)
  entry({
    "api",
    "miats",
    "uplink_free_speed_up"
  }, call("uplink_free_speed_up"), "", 417, 1)
  entry({
    "api",
    "miats",
    "uplink_get_free_speed_up_info"
  }, call("uplink_get_free_speed_up_info"), "", 418, 1)
  entry({
    "api",
    "miats",
    "uplink_vip_speed_up"
  }, call("uplink_vip_speed_up"), "", 419, 1)
  entry({
    "api",
    "miats",
    "validate_token_v2"
  }, call("validate_token"), "", 420, 1)
  entry({
    "api",
    "miats",
    "general_event_get"
  }, call("general_event_get"), "", 421, 1)
  entry({
    "api",
    "miats",
    "ccgame"
  }, call("turbo_ccgame_call"), "", 422, 1)
  entry({
    "api",
    "miats",
    "ipv6"
  }, call("turbo_ipv6_call"), "", 423, 1)
end
index = L0_0
L0_0 = require
L0_0 = L0_0("xiaoqiang.XQLog")
MIATS_ERR_STR = {
  ["1"] = _("\230\151\160\230\149\136\231\154\132\229\143\130\230\149\176"),
  ["2"] = _("token\229\183\178\232\191\135\230\156\159"),
  ["3"] = _("ubus\233\148\153\232\175\175")
}
function is_valid_token(A0_1)
  local L1_2, L2_3
  L1_2 = {}
  L1_2.code = 1
  L2_3 = _UPVALUE0_
  L2_3 = L2_3.isStrNil
  L2_3 = L2_3(A0_1)
  if L2_3 then
    return L1_2
  else
    L2_3 = {}
    L2_3.token = ""
    L2_3.token = A0_1
    if require("ubus").connect() then
      require("ubus").connect():close()
      if require("ubus").connect():call(_UPVALUE1_, "verify_token", L2_3) then
        return (require("ubus").connect():call(_UPVALUE1_, "verify_token", L2_3))
      else
        return L1_2
      end
    end
  end
end
function validate_token()
  local L0_4, L1_5, L2_6, L3_7
  L0_4 = {}
  L0_4.error = 0
  L0_4.msg = "OK"
  L1_5 = {}
  L1_5.token = ""
  L2_6 = _UPVALUE0_
  L2_6 = L2_6.formvalue
  L3_7 = "token"
  L2_6 = L2_6(L3_7)
  L3_7 = _UPVALUE0_
  L3_7 = L3_7.formvalue
  L3_7 = L3_7("callback")
  if _UPVALUE1_.isStrNil(L3_7) then
    L3_7 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_6) then
    L0_4.error = 1
    L0_4.msg = MIATS_ERR_STR[tostring(L0_4.error)]
    return
  end
  if is_valid_token(L2_6).code ~= 0 then
    L0_4.error = 2
    L0_4.msg = MIATS_ERR_STR[tostring(L0_4.error)]
  else
    L0_4.result = is_valid_token(L2_6)
  end
  _UPVALUE0_.write_jsonp(L0_4, L3_7)
end
function getWifiMacfilterInfo()
  local L0_8, L1_9, L2_10, L3_11, L4_12, L5_13, L6_14, L7_15, L8_16, L9_17, L10_18
  L0_8 = {}
  L0_8.error = 0
  L0_8.msg = "OK"
  L1_9 = _UPVALUE0_
  L1_9 = L1_9.formvalue
  L2_10 = "token"
  L1_9 = L1_9(L2_10)
  L2_10 = _UPVALUE0_
  L2_10 = L2_10.formvalue
  L3_11 = "callback"
  L2_10 = L2_10(L3_11)
  L3_11 = _UPVALUE1_
  L3_11 = L3_11.isStrNil
  L4_12 = L2_10
  L3_11 = L3_11(L4_12)
  if L3_11 then
    L2_10 = "noname"
  end
  L3_11 = _UPVALUE1_
  L3_11 = L3_11.isStrNil
  L4_12 = L1_9
  L3_11 = L3_11(L4_12)
  if L3_11 then
    L0_8.error = 1
    L3_11 = MIATS_ERR_STR
    L4_12 = tostring
    L5_13 = L0_8.error
    L4_12 = L4_12(L5_13)
    L3_11 = L3_11[L4_12]
    L0_8.msg = L3_11
    L3_11 = _UPVALUE0_
    L3_11 = L3_11.write_jsonp
    L4_12 = L0_8
    L5_13 = L2_10
    L3_11(L4_12, L5_13)
    return
  else
    L3_11 = is_valid_token
    L4_12 = L1_9
    L3_11 = L3_11(L4_12)
    L4_12 = L3_11.code
    if L4_12 ~= 0 then
      L0_8.error = 2
      L4_12 = MIATS_ERR_STR
      L5_13 = tostring
      L6_14 = L0_8.error
      L5_13 = L5_13(L6_14)
      L4_12 = L4_12[L5_13]
      L0_8.msg = L4_12
      L4_12 = _UPVALUE0_
      L4_12 = L4_12.write_jsonp
      L5_13 = L0_8
      L6_14 = L2_10
      L4_12(L5_13, L6_14)
      return
    end
  end
  L3_11 = require
  L4_12 = "luci.util"
  L3_11 = L3_11(L4_12)
  L4_12 = require
  L5_13 = "xiaoqiang.util.XQWifiUtil"
  L4_12 = L4_12(L5_13)
  L5_13 = require
  L6_14 = "xiaoqiang.util.XQDeviceUtil"
  L5_13 = L5_13(L6_14)
  L6_14 = tonumber
  L7_15 = _UPVALUE0_
  L7_15 = L7_15.formvalue
  L8_16 = "model"
  L10_18 = L7_15(L8_16)
  L6_14 = L6_14(L7_15, L8_16, L9_17, L10_18, L7_15(L8_16))
  L7_15 = {}
  L8_16 = L4_12.getWiFiMacfilterInfo
  L9_17 = L6_14
  L8_16 = L8_16(L9_17)
  L9_17 = L5_13.getDeviceList
  L10_18 = true
  L9_17 = L9_17(L10_18, false)
  L10_18 = L5_13.getDeviceList
  L10_18 = L10_18(false, false)
  if L8_16.maclist then
    for _FORV_14_, _FORV_15_ in ipairs(L9_17) do
      _FORV_15_.added = 0
      for _FORV_19_, _FORV_20_ in ipairs(L8_16.maclist) do
        if _FORV_20_.mac == _FORV_15_.mac then
          _FORV_15_.added = 1
          break
        end
      end
    end
    for _FORV_14_, _FORV_15_ in ipairs(L10_18) do
      if L3_11.contains(L8_16.maclist, _FORV_15_.mac) then
        _FORV_15_.added = 1
      else
        _FORV_15_.added = 0
      end
    end
  end
  L7_15.enable = L8_16.enable
  L7_15.model = L8_16.model
  L7_15.macfilter = L8_16.maclist
  L0_8.result = L7_15
  _UPVALUE0_.write_jsonp(L0_8, L2_10)
end
function set_wifi_black_device()
  local L0_19, L1_20, L2_21, L3_22
  L0_19 = {}
  L0_19.error = 0
  L0_19.msg = "OK"
  L1_20 = _UPVALUE0_
  L1_20 = L1_20.formvalue
  L2_21 = "token"
  L1_20 = L1_20(L2_21)
  L2_21 = _UPVALUE0_
  L2_21 = L2_21.formvalue
  L3_22 = "mac"
  L2_21 = L2_21(L3_22)
  L3_22 = _UPVALUE0_
  L3_22 = L3_22.formvalue
  L3_22 = L3_22("callback")
  if _UPVALUE1_.isStrNil(L3_22) then
    L3_22 = "noname"
  end
  if _UPVALUE1_.isStrNil(L1_20) or _UPVALUE1_.isStrNil(L2_21) then
    L0_19.error = 1
    L0_19.msg = MIATS_ERR_STR[tostring(L0_19.error)]
    _UPVALUE0_.write_jsonp(L0_19, L3_22)
    return
  elseif is_valid_token(L1_20).code ~= 0 then
    L0_19.error = 2
    L0_19.msg = MIATS_ERR_STR[tostring(L0_19.error)]
    _UPVALUE0_.write_jsonp(L0_19, L3_22)
    return
  end
  L2_21 = _UPVALUE1_.macFormat(L2_21)
  require("xiaoqiang.util.XQWifiUtil").editWiFiMacfilterList(0, {L2_21}, 0)
  L0_19.error = 0
  L0_19.mac = L2_21
  _UPVALUE0_.write_jsonp(L0_19, L3_22)
end
function get_wifi_danger_device()
  local L0_23, L1_24, L2_25, L3_26
  L0_23 = {}
  L0_23.error = 0
  L0_23.msg = "OK"
  L1_24 = {}
  L1_24.token = ""
  L2_25 = _UPVALUE0_
  L2_25 = L2_25.formvalue
  L3_26 = "token"
  L2_25 = L2_25(L3_26)
  L3_26 = _UPVALUE0_
  L3_26 = L3_26.formvalue
  L3_26 = L3_26("callback")
  if _UPVALUE1_.isStrNil(L3_26) then
    L3_26 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_25) then
    L0_23.error = 1
    L0_23.msg = MIATS_ERR_STR[tostring(L0_23.error)]
    _UPVALUE0_.write_jsonp(L0_23, L3_26)
    return
  else
    L1_24.token = L2_25
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "rub_network_get", L1_24) then
      L0_23.result = require("ubus").connect():call(_UPVALUE2_, "rub_network_get", L1_24)
    end
    require("ubus").connect():close()
  end
  _UPVALUE0_.write_jsonp(L0_23, L3_26)
end
function get_wifi_new_block()
  local L0_27, L1_28, L2_29, L3_30
  L0_27 = {}
  L0_27.error = 0
  L0_27.msg = "OK"
  L1_28 = {}
  L1_28.token = ""
  L2_29 = _UPVALUE0_
  L2_29 = L2_29.formvalue
  L3_30 = "token"
  L2_29 = L2_29(L3_30)
  L3_30 = _UPVALUE0_
  L3_30 = L3_30.formvalue
  L3_30 = L3_30("callback")
  if _UPVALUE1_.isStrNil(L3_30) then
    L3_30 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_29) then
    L0_27.error = 1
    L0_27.msg = MIATS_ERR_STR[tostring(L0_27.error)]
    _UPVALUE0_.write_jsonp(L0_27, L3_30)
    return
  else
    L1_28.token = L2_29
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "rub_intercept_get", L1_28) then
      L0_27.result = require("ubus").connect():call(_UPVALUE2_, "rub_intercept_get", L1_28)
    end
    require("ubus").connect():close()
  end
  _UPVALUE0_.write_jsonp(L0_27, L3_30)
end
function get_new_access()
  local L0_31, L1_32, L2_33, L3_34
  L0_31 = {}
  L0_31.error = 0
  L0_31.msg = "OK"
  L1_32 = {}
  L1_32.token = ""
  L2_33 = _UPVALUE0_
  L2_33 = L2_33.formvalue
  L3_34 = "token"
  L2_33 = L2_33(L3_34)
  L3_34 = _UPVALUE0_
  L3_34 = L3_34.formvalue
  L3_34 = L3_34("callback")
  if _UPVALUE1_.isStrNil(L3_34) then
    L3_34 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_33) then
    L0_31.error = 1
    L0_31.msg = MIATS_ERR_STR[tostring(L0_31.error)]
    _UPVALUE0_.write_jsonp(L0_31, L3_34)
    return
  else
    L1_32.token = L2_33
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "new_device_get", L1_32) then
      L0_31.result = require("ubus").connect():call(_UPVALUE2_, "new_device_get", L1_32)
    end
    require("ubus").connect():close()
  end
  _UPVALUE0_.write_jsonp(L0_31, L3_34)
end
function get_cw_event_info()
  local L0_35, L1_36, L2_37, L3_38
  L0_35 = {}
  L0_35.error = 0
  L0_35.msg = "OK"
  L1_36 = {}
  L1_36.token = ""
  L2_37 = _UPVALUE0_
  L2_37 = L2_37.formvalue
  L3_38 = "token"
  L2_37 = L2_37(L3_38)
  L3_38 = _UPVALUE0_
  L3_38 = L3_38.formvalue
  L3_38 = L3_38("callback")
  if _UPVALUE1_.isStrNil(L3_38) then
    L3_38 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_37) then
    L0_35.error = 1
    L0_35.msg = MIATS_ERR_STR[tostring(L0_35.error)]
    _UPVALUE0_.write_jsonp(L0_35, L3_38)
    return
  else
    L1_36.token = L2_37
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "fcw_get", L1_36) then
      L0_35.result = require("ubus").connect():call(_UPVALUE2_, "fcw_get", L1_36)
    else
      L0_35.error = 3
      L0_35.msg = MIATS_ERR_STR[tostring(L0_35.error)]
    end
    require("ubus").connect():close()
  end
  _UPVALUE0_.write_jsonp(L0_35, L3_38)
end
function remote_call()
  local L0_39, L1_40, L2_41, L3_42, L4_43, L5_44, L6_45, L7_46, L8_47, L9_48, L10_49
  L0_39 = require
  L1_40 = "luci.util"
  L0_39 = L0_39(L1_40)
  L1_40 = {}
  L1_40.error = 0
  L1_40.msg = "OK"
  L2_41 = _UPVALUE0_
  L2_41 = L2_41.formvalue
  L3_42 = "token"
  L2_41 = L2_41(L3_42)
  L3_42 = _UPVALUE0_
  L3_42 = L3_42.formvalue
  L4_43 = "callback"
  L3_42 = L3_42(L4_43)
  L4_43 = _UPVALUE0_
  L4_43 = L4_43.formvalue
  L5_44 = "api"
  L4_43 = L4_43(L5_44)
  L5_44 = _UPVALUE0_
  L5_44 = L5_44.formvalue
  L6_45 = "data"
  L5_44 = L5_44(L6_45)
  L6_45 = _UPVALUE1_
  L6_45 = L6_45.isStrNil
  L7_46 = L3_42
  L6_45 = L6_45(L7_46)
  if L6_45 then
    L3_42 = "noname"
  end
  L6_45 = _UPVALUE1_
  L6_45 = L6_45.isStrNil
  L7_46 = L2_41
  L6_45 = L6_45(L7_46)
  if not L6_45 then
    L6_45 = _UPVALUE1_
    L6_45 = L6_45.isStrNil
    L7_46 = L4_43
    L6_45 = L6_45(L7_46)
  elseif L6_45 then
    L1_40.error = 1
    L6_45 = MIATS_ERR_STR
    L7_46 = tostring
    L8_47 = L1_40.error
    L7_46 = L7_46(L8_47)
    L6_45 = L6_45[L7_46]
    L1_40.msg = L6_45
    L6_45 = _UPVALUE0_
    L6_45 = L6_45.write_jsonp
    L7_46 = L1_40
    L8_47 = L3_42
    L6_45(L7_46, L8_47)
    return
  end
  L6_45 = is_valid_token
  L7_46 = L2_41
  L6_45 = L6_45(L7_46)
  L7_46 = L6_45.code
  if L7_46 ~= 0 then
    L1_40.error = 2
    L7_46 = MIATS_ERR_STR
    L8_47 = tostring
    L9_48 = L1_40.error
    L8_47 = L8_47(L9_48)
    L7_46 = L7_46[L8_47]
    L1_40.msg = L7_46
    L7_46 = _UPVALUE0_
    L7_46 = L7_46.write_jsonp
    L8_47 = L1_40
    L9_48 = L3_42
    L7_46(L8_47, L9_48)
    return
  end
  L7_46 = {}
  L8_47 = nil
  L9_48 = string
  L9_48 = L9_48.find
  L10_49 = L4_43
  L9_48 = L9_48(L10_49, "/tianyi/api/user/query")
  L8_47 = L9_48
  L9_48 = _UPVALUE1_
  L9_48 = L9_48.isStrNil
  L10_49 = L8_47
  L9_48 = L9_48(L10_49)
  if not L9_48 then
    L7_46.api = 634
    L7_46.pluginID = "2882303761517410304"
    L7_46.info = "{\"api\":1001}"
    L9_48 = _UPVALUE2_
    L9_48 = L9_48.requestDatacenter
    L10_49 = L7_46
    L9_48 = L9_48(L10_49)
    L10_49 = L0_39.trim
    L10_49 = L10_49(L9_48)
    L1_40.result = L10_49
    L10_49 = _UPVALUE0_
    L10_49 = L10_49.write_jsonp
    L10_49(L1_40, L3_42)
    return
  end
  L9_48 = string
  L9_48 = L9_48.find
  L10_49 = L4_43
  L9_48 = L9_48(L10_49, "/tianyiUplink/api/user/query")
  L8_47 = L9_48
  L9_48 = _UPVALUE1_
  L9_48 = L9_48.isStrNil
  L10_49 = L8_47
  L9_48 = L9_48(L10_49)
  if not L9_48 then
    L9_48 = {}
    L9_48.api = 634
    L9_48.pluginID = "2882303761517545233"
    L9_48.info = "{\"api\":1001}"
    L10_49 = _UPVALUE2_
    L10_49 = L10_49.requestDatacenter
    L10_49 = L10_49(L9_48)
    L1_40.result = L0_39.trim(L10_49)
    _UPVALUE0_.write_jsonp(L1_40, L3_42)
    return
  end
  L9_48 = string
  L9_48 = L9_48.format
  L10_49 = "/usr/bin/matool --method api_call --params \"%s\" \"%s\""
  L9_48 = L9_48(L10_49, _UPVALUE1_._cmdformat(L4_43), _UPVALUE1_._cmdformat(L5_44))
  L10_49 = L0_39.exec
  L10_49 = L10_49(L9_48)
  L1_40.result = L0_39.trim(L10_49)
  _UPVALUE0_.write_jsonp(L1_40, L3_42)
end
function get_free_speed_up_info()
  local L0_50, L1_51, L2_52, L3_53, L4_54, L5_55, L6_56
  L0_50 = require
  L1_51 = "luci.util"
  L0_50 = L0_50(L1_51)
  L1_51 = {}
  L1_51.error = 0
  L1_51.msg = "OK"
  L2_52 = _UPVALUE0_
  L2_52 = L2_52.formvalue
  L3_53 = "token"
  L2_52 = L2_52(L3_53)
  L3_53 = _UPVALUE0_
  L3_53 = L3_53.formvalue
  L4_54 = "callback"
  L3_53 = L3_53(L4_54)
  L4_54 = _UPVALUE1_
  L4_54 = L4_54.isStrNil
  L5_55 = L3_53
  L4_54 = L4_54(L5_55)
  if L4_54 then
    L3_53 = "noname"
  end
  L4_54 = _UPVALUE1_
  L4_54 = L4_54.isStrNil
  L5_55 = L2_52
  L4_54 = L4_54(L5_55)
  if L4_54 then
    L1_51.error = 1
    L4_54 = MIATS_ERR_STR
    L5_55 = tostring
    L6_56 = L1_51.error
    L5_55 = L5_55(L6_56)
    L4_54 = L4_54[L5_55]
    L1_51.msg = L4_54
    L4_54 = _UPVALUE0_
    L4_54 = L4_54.write_jsonp
    L5_55 = L1_51
    L6_56 = L3_53
    L4_54(L5_55, L6_56)
    return
  end
  L4_54 = is_valid_token
  L5_55 = L2_52
  L4_54 = L4_54(L5_55)
  L5_55 = L4_54.code
  if L5_55 ~= 0 then
    L1_51.error = 2
    L5_55 = MIATS_ERR_STR
    L6_56 = tostring
    L6_56 = L6_56(L1_51.error)
    L5_55 = L5_55[L6_56]
    L1_51.msg = L5_55
    L5_55 = _UPVALUE0_
    L5_55 = L5_55.write_jsonp
    L6_56 = L1_51
    L5_55(L6_56, L3_53)
    return
  end
  L5_55 = {}
  L5_55.api = 634
  L5_55.pluginID = "2882303761517410304"
  L5_55.info = "{\"api\":1006}"
  L6_56 = _UPVALUE2_
  L6_56 = L6_56.requestDatacenter
  L6_56 = L6_56(L5_55)
  L1_51.result = L0_50.trim(L6_56)
  _UPVALUE0_.write_jsonp(L1_51, L3_53)
end
function free_speed_up()
  local L0_57, L1_58, L2_59, L3_60, L4_61, L5_62, L6_63
  L0_57 = require
  L1_58 = "luci.util"
  L0_57 = L0_57(L1_58)
  L1_58 = {}
  L1_58.error = 0
  L1_58.msg = "OK"
  L2_59 = _UPVALUE0_
  L2_59 = L2_59.formvalue
  L3_60 = "token"
  L2_59 = L2_59(L3_60)
  L3_60 = _UPVALUE0_
  L3_60 = L3_60.formvalue
  L4_61 = "callback"
  L3_60 = L3_60(L4_61)
  L4_61 = _UPVALUE1_
  L4_61 = L4_61.isStrNil
  L5_62 = L3_60
  L4_61 = L4_61(L5_62)
  if L4_61 then
    L3_60 = "noname"
  end
  L4_61 = _UPVALUE1_
  L4_61 = L4_61.isStrNil
  L5_62 = L2_59
  L4_61 = L4_61(L5_62)
  if L4_61 then
    L1_58.error = 1
    L4_61 = MIATS_ERR_STR
    L5_62 = tostring
    L6_63 = L1_58.error
    L5_62 = L5_62(L6_63)
    L4_61 = L4_61[L5_62]
    L1_58.msg = L4_61
    L4_61 = _UPVALUE0_
    L4_61 = L4_61.write_jsonp
    L5_62 = L1_58
    L6_63 = L3_60
    L4_61(L5_62, L6_63)
    return
  end
  L4_61 = is_valid_token
  L5_62 = L2_59
  L4_61 = L4_61(L5_62)
  L5_62 = L4_61.code
  if L5_62 ~= 0 then
    L1_58.error = 2
    L5_62 = MIATS_ERR_STR
    L6_63 = tostring
    L6_63 = L6_63(L1_58.error)
    L5_62 = L5_62[L6_63]
    L1_58.msg = L5_62
    L5_62 = _UPVALUE0_
    L5_62 = L5_62.write_jsonp
    L6_63 = L1_58
    L5_62(L6_63, L3_60)
    return
  end
  L5_62 = {}
  L5_62.api = 634
  L5_62.pluginID = "2882303761517410304"
  L5_62.info = "{\"api\":1002}"
  L6_63 = _UPVALUE2_
  L6_63 = L6_63.requestDatacenter
  L6_63 = L6_63(L5_62)
  L1_58.result = L0_57.trim(L6_63)
  _UPVALUE0_.write_jsonp(L1_58, L3_60)
end
function vip_speed_up()
  local L0_64, L1_65, L2_66, L3_67, L4_68, L5_69, L6_70
  L0_64 = require
  L1_65 = "luci.util"
  L0_64 = L0_64(L1_65)
  L1_65 = {}
  L1_65.error = 0
  L1_65.msg = "OK"
  L2_66 = _UPVALUE0_
  L2_66 = L2_66.formvalue
  L3_67 = "token"
  L2_66 = L2_66(L3_67)
  L3_67 = _UPVALUE0_
  L3_67 = L3_67.formvalue
  L4_68 = "callback"
  L3_67 = L3_67(L4_68)
  L4_68 = _UPVALUE1_
  L4_68 = L4_68.isStrNil
  L5_69 = L3_67
  L4_68 = L4_68(L5_69)
  if L4_68 then
    L3_67 = "noname"
  end
  L4_68 = _UPVALUE1_
  L4_68 = L4_68.isStrNil
  L5_69 = L2_66
  L4_68 = L4_68(L5_69)
  if L4_68 then
    L1_65.error = 1
    L4_68 = MIATS_ERR_STR
    L5_69 = tostring
    L6_70 = L1_65.error
    L5_69 = L5_69(L6_70)
    L4_68 = L4_68[L5_69]
    L1_65.msg = L4_68
    L4_68 = _UPVALUE0_
    L4_68 = L4_68.write_jsonp
    L5_69 = L1_65
    L6_70 = L3_67
    L4_68(L5_69, L6_70)
    return
  end
  L4_68 = is_valid_token
  L5_69 = L2_66
  L4_68 = L4_68(L5_69)
  L5_69 = L4_68.code
  if L5_69 ~= 0 then
    L1_65.error = 2
    L5_69 = MIATS_ERR_STR
    L6_70 = tostring
    L6_70 = L6_70(L1_65.error)
    L5_69 = L5_69[L6_70]
    L1_65.msg = L5_69
    L5_69 = _UPVALUE0_
    L5_69 = L5_69.write_jsonp
    L6_70 = L1_65
    L5_69(L6_70, L3_67)
    return
  end
  L5_69 = {}
  L5_69.api = 634
  L5_69.pluginID = "2882303761517410304"
  L5_69.info = "{\"api\":1007}"
  L6_70 = _UPVALUE2_
  L6_70 = L6_70.requestDatacenter
  L6_70 = L6_70(L5_69)
  L1_65.result = L0_64.trim(L6_70)
  _UPVALUE0_.write_jsonp(L1_65, L3_67)
end
function get_vip_pay_info()
  local L0_71, L1_72, L2_73, L3_74
  L0_71 = {}
  L0_71.error = 0
  L0_71.msg = "OK"
  L1_72 = {}
  L1_72.token = ""
  L2_73 = _UPVALUE0_
  L2_73 = L2_73.formvalue
  L3_74 = "token"
  L2_73 = L2_73(L3_74)
  L3_74 = _UPVALUE0_
  L3_74 = L3_74.formvalue
  L3_74 = L3_74("callback")
  if _UPVALUE1_.isStrNil(L3_74) then
    L3_74 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_73) then
    L0_71.error = 1
    L0_71.msg = MIATS_ERR_STR[tostring(L0_71.error)]
    _UPVALUE0_.write_jsonp(L0_71, L3_74)
    return
  else
    L1_72.token = L2_73
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "vip_need_repay_get", L1_72) then
      L0_71.result = require("ubus").connect():call(_UPVALUE2_, "vip_need_repay_get", L1_72)
    end
    require("ubus").connect():close()
  end
  _UPVALUE0_.write_jsonp(L0_71, L3_74)
end
function get_speed_up_total_info()
  local L0_75, L1_76, L2_77, L3_78
  L0_75 = {}
  L0_75.error = 0
  L0_75.msg = "OK"
  L1_76 = {}
  L1_76.token = ""
  L2_77 = _UPVALUE0_
  L2_77 = L2_77.formvalue
  L3_78 = "token"
  L2_77 = L2_77(L3_78)
  L3_78 = _UPVALUE0_
  L3_78 = L3_78.formvalue
  L3_78 = L3_78("callback")
  if _UPVALUE1_.isStrNil(L3_78) then
    L3_78 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_77) then
    L0_75.error = 1
    L0_75.msg = MIATS_ERR_STR[tostring(L0_75.error)]
    _UPVALUE0_.write_jsonp(L0_75, L3_78)
    return
  else
    L1_76.token = L2_77
  end
  L0_75.result = {count = 4}
  _UPVALUE0_.write_jsonp(L0_75, L3_78)
end
function get_ad_block_info()
  local L0_79, L1_80, L2_81, L3_82
  L0_79 = {}
  L0_79.error = 0
  L0_79.msg = "OK"
  L1_80 = {}
  L1_80.token = ""
  L2_81 = _UPVALUE0_
  L2_81 = L2_81.formvalue
  L3_82 = "token"
  L2_81 = L2_81(L3_82)
  L3_82 = _UPVALUE0_
  L3_82 = L3_82.formvalue
  L3_82 = L3_82("callback")
  if _UPVALUE1_.isStrNil(L3_82) then
    L3_82 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_81) then
    L0_79.error = 1
    L0_79.msg = MIATS_ERR_STR[tostring(L0_79.error)]
    _UPVALUE0_.write_jsonp(L0_79, L3_82)
    return
  else
    L1_80.token = L2_81
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "ad_block_get", L1_80) then
      L0_79.result = require("ubus").connect():call(_UPVALUE2_, "ad_block_get", L1_80)
    else
      L0_79.error = 3
      L0_79.msg = MIATS_ERR_STR[tostring(L0_79.error)]
    end
    require("ubus").connect():close()
  end
  _UPVALUE0_.write_jsonp(L0_79, L3_82)
end
function valid_show_cb()
  local L0_83, L1_84, L2_85, L3_86
  L0_83 = {}
  L0_83.error = 0
  L0_83.msg = "OK"
  L1_84 = {}
  L1_84.token = ""
  L2_85 = _UPVALUE0_
  L2_85 = L2_85.formvalue
  L3_86 = "token"
  L2_85 = L2_85(L3_86)
  L3_86 = _UPVALUE1_
  L3_86 = L3_86.isStrNil
  L3_86 = L3_86(L2_85)
  if L3_86 then
    L0_83.error = 1
    L3_86 = MIATS_ERR_STR
    L3_86 = L3_86[tostring(L0_83.error)]
    L0_83.msg = L3_86
    return
  else
    L3_86 = luci
    L3_86 = L3_86.http
    L3_86 = L3_86.getenv
    L3_86 = L3_86("REMOTE_ADDR")
    L1_84.token = L2_85
    L1_84.dev_mac, L1_84.dev_ip = luci.sys.net.ip4mac(L3_86), L3_86
  end
  L3_86 = is_valid_token
  L3_86 = L3_86(L2_85)
  if L3_86.code ~= 0 then
    L0_83.error = 2
    L0_83.msg = MIATS_ERR_STR[tostring(L0_83.error)]
    return
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "user_valid_show", L1_84) then
      L0_83.result = require("ubus").connect():call(_UPVALUE2_, "user_valid_show", L1_84)
    else
      L0_83.error = 3
      L0_83.msg = MIATS_ERR_STR[tostring(L0_83.error)]
    end
    require("ubus").connect():close()
  end
end
function web_enable_show()
  local L0_87, L1_88, L2_89, L3_90, L4_91, L5_92, L6_93
  L0_87 = {}
  L0_87.error = 0
  L0_87.msg = "OK"
  L1_88 = {}
  L1_88.domain = ""
  L2_89 = _UPVALUE0_
  L2_89 = L2_89.formvalue
  L3_90 = "domain"
  L2_89 = L2_89(L3_90)
  L3_90 = _UPVALUE0_
  L3_90 = L3_90.formvalue
  L4_91 = "eventType"
  L3_90 = L3_90(L4_91)
  L4_91 = luci
  L4_91 = L4_91.http
  L4_91 = L4_91.getenv
  L5_92 = "REMOTE_ADDR"
  L4_91 = L4_91(L5_92)
  L5_92 = luci
  L5_92 = L5_92.sys
  L5_92 = L5_92.net
  L5_92 = L5_92.ip4mac
  L6_93 = L4_91
  L5_92 = L5_92(L6_93)
  L6_93 = _UPVALUE0_
  L6_93 = L6_93.formvalue
  L6_93 = L6_93("callback")
  if _UPVALUE1_.isStrNil(L6_93) then
    L6_93 = "noname"
  end
  if _UPVALUE1_.isStrNil(L2_89) then
    L0_87.error = 1
    L0_87.msg = MIATS_ERR_STR[tostring(L0_87.error)]
    return
  else
    L1_88.domain = L2_89
    L1_88.eventType = tonumber(L3_90)
    L1_88.dev_mac = L5_92
  end
  if require("ubus").connect() then
    if require("ubus").connect():call(_UPVALUE2_, "wie2s", L1_88) then
      L0_87.result = require("ubus").connect():call(_UPVALUE2_, "wie2s", L1_88)
    else
      L0_87.error = 3
      L0_87.msg = MIATS_ERR_STR[tostring(L0_87.error)]
    end
    require("ubus").connect():close()
  end
  _UPVALUE0_.write_jsonp(L0_87, L6_93)
end
function uplink_free_speed_up()
  local L0_94, L1_95, L2_96, L3_97, L4_98, L5_99, L6_100
  L0_94 = require
  L1_95 = "luci.util"
  L0_94 = L0_94(L1_95)
  L1_95 = {}
  L1_95.error = 0
  L1_95.msg = "OK"
  L2_96 = _UPVALUE0_
  L2_96 = L2_96.formvalue
  L3_97 = "token"
  L2_96 = L2_96(L3_97)
  L3_97 = _UPVALUE0_
  L3_97 = L3_97.formvalue
  L4_98 = "callback"
  L3_97 = L3_97(L4_98)
  L4_98 = _UPVALUE1_
  L4_98 = L4_98.isStrNil
  L5_99 = L3_97
  L4_98 = L4_98(L5_99)
  if L4_98 then
    L3_97 = "noname"
  end
  L4_98 = _UPVALUE1_
  L4_98 = L4_98.isStrNil
  L5_99 = L2_96
  L4_98 = L4_98(L5_99)
  if L4_98 then
    L1_95.error = 1
    L4_98 = MIATS_ERR_STR
    L5_99 = tostring
    L6_100 = L1_95.error
    L5_99 = L5_99(L6_100)
    L4_98 = L4_98[L5_99]
    L1_95.msg = L4_98
    L4_98 = _UPVALUE0_
    L4_98 = L4_98.write_jsonp
    L5_99 = L1_95
    L6_100 = L3_97
    L4_98(L5_99, L6_100)
    return
  end
  L4_98 = is_valid_token
  L5_99 = L2_96
  L4_98 = L4_98(L5_99)
  L5_99 = L4_98.code
  if L5_99 ~= 0 then
    L1_95.error = 2
    L5_99 = MIATS_ERR_STR
    L6_100 = tostring
    L6_100 = L6_100(L1_95.error)
    L5_99 = L5_99[L6_100]
    L1_95.msg = L5_99
    L5_99 = _UPVALUE0_
    L5_99 = L5_99.write_jsonp
    L6_100 = L1_95
    L5_99(L6_100, L3_97)
    return
  end
  L5_99 = {}
  L5_99.api = 634
  L5_99.pluginID = "2882303761517545233"
  L5_99.info = "{\"api\":1002}"
  L6_100 = _UPVALUE2_
  L6_100 = L6_100.requestDatacenter
  L6_100 = L6_100(L5_99)
  L1_95.result = L0_94.trim(L6_100)
  _UPVALUE0_.write_jsonp(L1_95, L3_97)
end
function uplink_get_free_speed_up_info()
  local L0_101, L1_102, L2_103, L3_104, L4_105, L5_106, L6_107
  L0_101 = require
  L1_102 = "luci.util"
  L0_101 = L0_101(L1_102)
  L1_102 = {}
  L1_102.error = 0
  L1_102.msg = "OK"
  L2_103 = _UPVALUE0_
  L2_103 = L2_103.formvalue
  L3_104 = "token"
  L2_103 = L2_103(L3_104)
  L3_104 = _UPVALUE0_
  L3_104 = L3_104.formvalue
  L4_105 = "callback"
  L3_104 = L3_104(L4_105)
  L4_105 = _UPVALUE1_
  L4_105 = L4_105.isStrNil
  L5_106 = L3_104
  L4_105 = L4_105(L5_106)
  if L4_105 then
    L3_104 = "noname"
  end
  L4_105 = _UPVALUE1_
  L4_105 = L4_105.isStrNil
  L5_106 = L2_103
  L4_105 = L4_105(L5_106)
  if L4_105 then
    L1_102.error = 1
    L4_105 = MIATS_ERR_STR
    L5_106 = tostring
    L6_107 = L1_102.error
    L5_106 = L5_106(L6_107)
    L4_105 = L4_105[L5_106]
    L1_102.msg = L4_105
    L4_105 = _UPVALUE0_
    L4_105 = L4_105.write_jsonp
    L5_106 = L1_102
    L6_107 = L3_104
    L4_105(L5_106, L6_107)
    return
  end
  L4_105 = is_valid_token
  L5_106 = L2_103
  L4_105 = L4_105(L5_106)
  L5_106 = L4_105.code
  if L5_106 ~= 0 then
    L1_102.error = 2
    L5_106 = MIATS_ERR_STR
    L6_107 = tostring
    L6_107 = L6_107(L1_102.error)
    L5_106 = L5_106[L6_107]
    L1_102.msg = L5_106
    L5_106 = _UPVALUE0_
    L5_106 = L5_106.write_jsonp
    L6_107 = L1_102
    L5_106(L6_107, L3_104)
    return
  end
  L5_106 = {}
  L5_106.api = 634
  L5_106.pluginID = "2882303761517545233"
  L5_106.info = "{\"api\":1006}"
  L6_107 = _UPVALUE2_
  L6_107 = L6_107.requestDatacenter
  L6_107 = L6_107(L5_106)
  L1_102.result = L0_101.trim(L6_107)
  _UPVALUE0_.write_jsonp(L1_102, L3_104)
end
function uplink_vip_speed_up()
  local L0_108, L1_109, L2_110, L3_111, L4_112, L5_113, L6_114
  L0_108 = require
  L1_109 = "luci.util"
  L0_108 = L0_108(L1_109)
  L1_109 = {}
  L1_109.error = 0
  L1_109.msg = "OK"
  L2_110 = _UPVALUE0_
  L2_110 = L2_110.formvalue
  L3_111 = "token"
  L2_110 = L2_110(L3_111)
  L3_111 = _UPVALUE0_
  L3_111 = L3_111.formvalue
  L4_112 = "callback"
  L3_111 = L3_111(L4_112)
  L4_112 = _UPVALUE1_
  L4_112 = L4_112.isStrNil
  L5_113 = L3_111
  L4_112 = L4_112(L5_113)
  if L4_112 then
    L3_111 = "noname"
  end
  L4_112 = _UPVALUE1_
  L4_112 = L4_112.isStrNil
  L5_113 = L2_110
  L4_112 = L4_112(L5_113)
  if L4_112 then
    L1_109.error = 1
    L4_112 = MIATS_ERR_STR
    L5_113 = tostring
    L6_114 = L1_109.error
    L5_113 = L5_113(L6_114)
    L4_112 = L4_112[L5_113]
    L1_109.msg = L4_112
    L4_112 = _UPVALUE0_
    L4_112 = L4_112.write_jsonp
    L5_113 = L1_109
    L6_114 = L3_111
    L4_112(L5_113, L6_114)
    return
  end
  L4_112 = is_valid_token
  L5_113 = L2_110
  L4_112 = L4_112(L5_113)
  L5_113 = L4_112.code
  if L5_113 ~= 0 then
    L1_109.error = 2
    L5_113 = MIATS_ERR_STR
    L6_114 = tostring
    L6_114 = L6_114(L1_109.error)
    L5_113 = L5_113[L6_114]
    L1_109.msg = L5_113
    L5_113 = _UPVALUE0_
    L5_113 = L5_113.write_jsonp
    L6_114 = L1_109
    L5_113(L6_114, L3_111)
    return
  end
  L5_113 = {}
  L5_113.api = 634
  L5_113.pluginID = "2882303761517545233"
  L5_113.info = "{\"api\":1007}"
  L6_114 = _UPVALUE2_
  L6_114 = L6_114.requestDatacenter
  L6_114 = L6_114(L5_113)
  L1_109.result = L0_108.trim(L6_114)
  _UPVALUE0_.write_jsonp(L1_109, L3_111)
end
function general_event_get()
  local L0_115, L1_116, L2_117, L3_118, L4_119, L5_120
  L0_115 = {}
  L0_115.error = 0
  L0_115.msg = "OK"
  L1_116 = _UPVALUE0_
  L1_116 = L1_116.formvalue
  L2_117 = "token"
  L1_116 = L1_116(L2_117)
  L2_117 = _UPVALUE0_
  L2_117 = L2_117.formvalue
  L3_118 = "callback"
  L2_117 = L2_117(L3_118)
  L3_118 = _UPVALUE1_
  L3_118 = L3_118.isStrNil
  L4_119 = L2_117
  L3_118 = L3_118(L4_119)
  if L3_118 then
    L2_117 = "noname"
  end
  L3_118 = _UPVALUE1_
  L3_118 = L3_118.isStrNil
  L4_119 = L1_116
  L3_118 = L3_118(L4_119)
  if L3_118 then
    L0_115.error = 4294967295
    L3_118 = MIATS_ERR_STR
    L4_119 = tostring
    L5_120 = L0_115.error
    L4_119 = L4_119(L5_120)
    L3_118 = L3_118[L4_119]
    L0_115.msg = L3_118
    L3_118 = _UPVALUE0_
    L3_118 = L3_118.write_jsonp
    L4_119 = L0_115
    L5_120 = L2_117
    L3_118(L4_119, L5_120)
    return
  end
  L3_118 = is_valid_token
  L4_119 = L1_116
  L3_118 = L3_118(L4_119)
  L4_119 = L3_118.code
  if L4_119 ~= 0 then
    L0_115.error = 4294967294
    L4_119 = MIATS_ERR_STR
    L5_120 = tostring
    L5_120 = L5_120(L0_115.error)
    L4_119 = L4_119[L5_120]
    L0_115.msg = L4_119
    L4_119 = _UPVALUE0_
    L4_119 = L4_119.write_jsonp
    L5_120 = L0_115
    L4_119(L5_120, L2_117)
    return
  end
  L4_119 = {}
  L4_119.code = 0
  L5_120 = {}
  L5_120.token = L1_116
  if require("ubus").connect() then
    require("ubus").connect():close()
    if require("ubus").connect():call(_UPVALUE2_, "general_event_get", L5_120) then
      L4_119 = require("ubus").connect():call(_UPVALUE2_, "general_event_get", L5_120)
    else
      L4_119.code = 4294967291
      L4_119.msg = "ubus get event info failed."
    end
  end
  L0_115.result = L4_119
  _UPVALUE0_.write_jsonp(L0_115, L2_117)
end
function turbo_ccgame_call()
  local L0_121, L1_122, L2_123, L3_124, L4_125, L5_126, L6_127, L7_128, L8_129, L9_130, L10_131, L11_132, L12_133
  L0_121 = {}
  L0_121.error = 0
  L0_121.msg = "OK"
  L1_122 = _UPVALUE0_
  L1_122 = L1_122.formvalue
  L2_123 = "token"
  L1_122 = L1_122(L2_123)
  L2_123 = _UPVALUE0_
  L2_123 = L2_123.formvalue
  L3_124 = "callback"
  L2_123 = L2_123(L3_124)
  L3_124 = _UPVALUE1_
  L3_124 = L3_124.isStrNil
  L4_125 = L2_123
  L3_124 = L3_124(L4_125)
  if L3_124 then
    L2_123 = "noname"
  end
  L3_124 = _UPVALUE1_
  L3_124 = L3_124.isStrNil
  L4_125 = L1_122
  L3_124 = L3_124(L4_125)
  if L3_124 then
    L0_121.error = 4294967295
    L3_124 = MIATS_ERR_STR
    L4_125 = tostring
    L5_126 = L0_121.error
    L4_125 = L4_125(L5_126)
    L3_124 = L3_124[L4_125]
    L0_121.msg = L3_124
    L3_124 = _UPVALUE0_
    L3_124 = L3_124.write_jsonp
    L4_125 = L0_121
    L5_126 = L2_123
    L3_124(L4_125, L5_126)
    return
  end
  L3_124 = is_valid_token
  L4_125 = L1_122
  L3_124 = L3_124(L4_125)
  L4_125 = L3_124.code
  if L4_125 ~= 0 then
    L0_121.error = 4294967294
    L4_125 = MIATS_ERR_STR
    L5_126 = tostring
    L6_127 = L0_121.error
    L5_126 = L5_126(L6_127)
    L4_125 = L4_125[L5_126]
    L0_121.msg = L4_125
    L4_125 = _UPVALUE0_
    L4_125 = L4_125.write_jsonp
    L5_126 = L0_121
    L6_127 = L2_123
    L4_125(L5_126, L6_127)
    return
  end
  L4_125 = {}
  L4_125.code = 0
  L5_126 = tonumber
  L6_127 = _UPVALUE0_
  L6_127 = L6_127.formvalue
  L7_128 = "cmd"
  L6_127 = L6_127(L7_128)
  L6_127 = L6_127 or ""
  L5_126 = L5_126(L6_127)
  L6_127 = require
  L7_128 = "turbo.ccgame.ccgame_interface"
  L6_127 = L6_127(L7_128)
  if not L6_127 then
    L4_125.code = 4294967295
    L4_125.msg = "not support ccgame."
  elseif L5_126 < 0 or L5_126 > 9 then
    L4_125.code = 4294967295
    L4_125.msg = "action id is not valid"
  else
    L7_128 = {}
    L7_128.cmdid = L5_126
    L7_128.token = L1_122
    L8_129 = {}
    L7_128.data = L8_129
    L8_129 = _UPVALUE0_
    L8_129 = L8_129.formvalue
    L9_130 = "ip"
    L8_129 = L8_129(L9_130)
    L9_130 = _UPVALUE0_
    L9_130 = L9_130.formvalue
    L10_131 = "byvpn"
    L9_130 = L9_130(L10_131)
    L10_131 = _UPVALUE0_
    L10_131 = L10_131.formvalue
    L11_132 = "game"
    L10_131 = L10_131(L11_132)
    L11_132 = _UPVALUE0_
    L11_132 = L11_132.formvalue
    L12_133 = "region"
    L11_132 = L11_132(L12_133)
    L12_133 = _UPVALUE0_
    L12_133 = L12_133.formvalue
    L12_133 = L12_133("ubus")
    if L8_129 then
      L7_128.data.iplist = _UPVALUE1_._cmdformat(L8_129)
    end
    if L9_130 and L9_130 ~= "0" then
      L7_128.data.byvpn = "0"
    else
      L7_128.data.byvpn = "1"
    end
    if L10_131 and L11_132 then
      L7_128.data.gameid = _UPVALUE1_._cmdformat(L10_131)
      L7_128.data.regionid = _UPVALUE1_._cmdformat(L11_132)
    end
    if L12_133 then
      L7_128.ubus = _UPVALUE1_._cmdformat(L12_133)
    end
    L4_125 = L6_127.ccgame_call(L7_128)
  end
  L0_121.result = L4_125
  L7_128 = _UPVALUE0_
  L7_128 = L7_128.write_jsonp
  L8_129 = L0_121
  L9_130 = L2_123
  L7_128(L8_129, L9_130)
end
function turbo_ipv6_call()
  local L0_134, L1_135, L2_136, L3_137, L4_138, L5_139, L6_140, L7_141, L8_142, L9_143, L10_144, L11_145, L12_146, L13_147, L14_148, L15_149
  L0_134 = require
  L1_135 = "luci.util"
  L0_134 = L0_134(L1_135)
  L1_135 = {}
  L1_135.error = 0
  L1_135.msg = "OK"
  L2_136 = _UPVALUE0_
  L2_136 = L2_136.formvalue
  L3_137 = "token"
  L2_136 = L2_136(L3_137)
  L3_137 = _UPVALUE0_
  L3_137 = L3_137.formvalue
  L4_138 = "callback"
  L3_137 = L3_137(L4_138)
  L4_138 = tonumber
  L5_139 = _UPVALUE0_
  L5_139 = L5_139.formvalue
  L6_140 = "cmd"
  L5_139 = L5_139(L6_140)
  L5_139 = L5_139 or ""
  L4_138 = L4_138(L5_139)
  L5_139 = _UPVALUE1_
  L5_139 = L5_139._cmdformat
  L6_140 = _UPVALUE0_
  L6_140 = L6_140.formvalue
  L7_141 = "ubus"
  L6_140 = L6_140(L7_141)
  L6_140 = L6_140 or "nothing"
  L5_139 = L5_139(L6_140)
  L6_140 = _UPVALUE1_
  L6_140 = L6_140.isStrNil
  L7_141 = L3_137
  L6_140 = L6_140(L7_141)
  if L6_140 then
    L3_137 = "noname"
  end
  L6_140 = _UPVALUE1_
  L6_140 = L6_140.isStrNil
  L7_141 = L2_136
  L6_140 = L6_140(L7_141)
  if L6_140 then
    L1_135.error = 4294967295
    L6_140 = MIATS_ERR_STR
    L7_141 = tostring
    L8_142 = L1_135.error
    L7_141 = L7_141(L8_142)
    L6_140 = L6_140[L7_141]
    L1_135.msg = L6_140
    L6_140 = _UPVALUE0_
    L6_140 = L6_140.write_jsonp
    L7_141 = L1_135
    L8_142 = L3_137
    L6_140(L7_141, L8_142)
    return
  end
  if L4_138 == 3 or L4_138 == 0 and L5_139 == "get_pass" then
  else
    L6_140 = is_valid_token
    L7_141 = L2_136
    L6_140 = L6_140(L7_141)
    L7_141 = L6_140.code
    if L7_141 ~= 0 then
      L1_135.error = 4294967294
      L7_141 = MIATS_ERR_STR
      L8_142 = tostring
      L9_143 = L1_135.error
      L8_142 = L8_142(L9_143)
      L7_141 = L7_141[L8_142]
      L1_135.msg = L7_141
      L7_141 = _UPVALUE0_
      L7_141 = L7_141.write_jsonp
      L8_142 = L1_135
      L9_143 = L3_137
      L7_141(L8_142, L9_143)
      return
    end
  end
  L6_140 = {}
  L6_140.code = 0
  if L4_138 < 0 or L4_138 > 3 then
    L6_140.code = 4294967295
    L6_140.msg = "action id is not valid"
  else
    L7_141 = require
    L8_142 = "ubus"
    L7_141 = L7_141(L8_142)
    L8_142 = L7_141.connect
    L8_142 = L8_142()
    if not L8_142 then
      L6_140.code = 4294967295
      L6_140.msg = "ubus cannot connected."
    else
      L9_143 = nil
      L10_144 = "turbo_ipv6"
      L11_145 = {}
      if L4_138 == 1 then
        L12_146 = {}
        L12_146.provider = "sellon"
        L13_147 = "matool --method api_call_post --params /device/vip/account '"
        L14_148 = _UPVALUE2_
        L14_148 = L14_148.encode
        L15_149 = L12_146
        L14_148 = L14_148(L15_149)
        L15_149 = "'"
        L13_147 = L13_147 .. L14_148 .. L15_149
        L14_148 = pcall
        function L15_149()
          return _UPVALUE0_.decode(_UPVALUE1_.trim(_UPVALUE1_.exec(_UPVALUE2_)))
        end
        L15_149 = L14_148(L15_149)
        if not L14_148 or not L15_149 or type(L15_149) ~= "table" or L15_149.code ~= 0 then
          L6_140.code = 4294967295
          L6_140.msg = "active account failed. pls check if account binded or network is connected."
          L9_143 = nil
        else
          L9_143 = "start"
        end
      elseif L4_138 == 2 then
        L9_143 = "stop"
      elseif L4_138 == 3 then
        L9_143 = "status"
      elseif L4_138 == 0 then
        L12_146 = _UPVALUE1_
        L12_146 = L12_146._cmdformat
        L13_147 = _UPVALUE0_
        L13_147 = L13_147.formvalue
        L14_148 = "ubus"
        L13_147 = L13_147(L14_148)
        L13_147 = L13_147 or "nothing"
        L12_146 = L12_146(L13_147)
        L9_143 = L12_146
      else
        L9_143 = nil
        L6_140.msg = "not supported command."
      end
      if L9_143 and L9_143 ~= "" then
        L13_147 = L8_142
        L12_146 = L8_142.call
        L14_148 = L10_144
        L15_149 = L9_143
        L12_146 = L12_146(L13_147, L14_148, L15_149, L11_145)
        L14_148 = L8_142
        L13_147 = L8_142.close
        L13_147(L14_148)
        if L12_146 then
          L6_140 = L12_146
        else
          L6_140.code = 4294967295
          L6_140.msg = "call ubus failed."
        end
      else
        L6_140.code = 4294967295
      end
    end
  end
  L1_135.result = L6_140
  L7_141 = _UPVALUE0_
  L7_141 = L7_141.write_jsonp
  L8_142 = L1_135
  L9_143 = L3_137
  L7_141(L8_142, L9_143)
end
