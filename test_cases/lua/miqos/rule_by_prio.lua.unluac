local L0_0
L0_0 = require
L0_0("miqos.common")
L0_0 = qdisc
if not L0_0 then
  L0_0 = {}
  qdisc = L0_0
end
L0_0 = "prio"
qdisc[L0_0] = {}
;({}).clean = function(A0_1)
  local L1_2, L2_3, L3_4, L4_5, L5_6, L6_7, L7_8
  L1_2 = {}
  L3_4 = A0_1 or {}
  for L5_6, L6_7 in L2_3(L3_4) do
    L7_8 = string
    L7_8 = L7_8.format
    L7_8 = L7_8("%s del dev %s root ", const_tc_qdisc, L6_7.dev)
    table.insert(L1_2, L7_8)
  end
  if not L2_3 then
    L2_3(L3_4, L4_5)
  end
end
;({}).changed = function()
  local L0_9, L1_10
  L0_9 = false
  L1_10 = ""
  if cfg.bands.changed then
    L1_10 = L1_10 .. "/band"
    cfg.bands.changed = false
    L0_9 = true
  end
  if cfg.guest.changed == 1 then
    L1_10 = L1_10 .. "/guest"
    cfg.guest.changed = 0
    L0_9 = true
  end
  if special_host_list.changed then
    L1_10 = L1_10 .. "/speical host list"
    special_host_list.changed = false
    L0_9 = true
  end
  if L1_10 ~= "" then
    logger(3, "CHANGE: " .. L1_10)
  end
  return L0_9
end
;({}).read_qos_config = function()
  if not read_qos_guest_xq_config(true) then
    logger(3, "read_qos_config failed.")
    return false
  end
end
;({}).apply = function(A0_11, A1_12, A2_13, A3_14)
  local L4_15, L5_16
  L4_15 = "add"
  if not A0_11 then
    L4_15 = "add"
  else
    L5_16 = qdisc
    L5_16 = L5_16[A0_11]
    if not L5_16 then
      L5_16 = logger
      L5_16(3, "ERROR: qdisc `" .. A0_11 .. "` not found. ")
      L5_16 = false
      return L5_16
    elseif A3_14 then
      L5_16 = _UPVALUE0_
      L5_16 = L5_16.clean
      L5_16(A2_13)
      L4_15 = "add"
    else
      L5_16 = _UPVALUE1_
      if A0_11 == L5_16 then
        L4_15 = "change"
      else
        L5_16 = _UPVALUE0_
        L5_16 = L5_16.clean
        L5_16(A2_13)
        L4_15 = "add"
      end
    end
  end
  L5_16 = {}
  if not _UPVALUE2_(L5_16, A2_13, L4_15, A1_12) then
    logger(3, "ERROR: generate prio qdisc failed.")
    return false
  end
  if not exec_cmd(L5_16, nil) then
    logger(3, "ERROR: apply prio qdisc failed.")
    return false
  end
  return true
end
